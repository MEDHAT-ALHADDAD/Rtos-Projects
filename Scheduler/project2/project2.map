Component: ARM Compiler 5.06 update 6 (build 750) Tool: armlink [4d35ed]

==============================================================================

Section Cross References

    queue.o(i.prvCopyDataFromQueue) refers to memcpya.o(.text) for __aeabi_memcpy
    queue.o(i.prvCopyDataToQueue) refers to tasks.o(i.vTaskPriorityDisinherit) for vTaskPriorityDisinherit
    queue.o(i.prvCopyDataToQueue) refers to memcpya.o(.text) for __aeabi_memcpy
    queue.o(i.prvIsQueueEmpty) refers to port.o(i.vPortEnterCritical) for vPortEnterCritical
    queue.o(i.prvIsQueueEmpty) refers to port.o(i.vPortExitCritical) for vPortExitCritical
    queue.o(i.prvIsQueueFull) refers to port.o(i.vPortEnterCritical) for vPortEnterCritical
    queue.o(i.prvIsQueueFull) refers to port.o(i.vPortExitCritical) for vPortExitCritical
    queue.o(i.prvUnlockQueue) refers to port.o(i.vPortEnterCritical) for vPortEnterCritical
    queue.o(i.prvUnlockQueue) refers to tasks.o(i.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(i.prvUnlockQueue) refers to tasks.o(i.vTaskMissedYield) for vTaskMissedYield
    queue.o(i.prvUnlockQueue) refers to port.o(i.vPortExitCritical) for vPortExitCritical
    queue.o(i.uxQueueMessagesWaiting) refers to port.o(i.vPortEnterCritical) for vPortEnterCritical
    queue.o(i.uxQueueMessagesWaiting) refers to port.o(i.vPortExitCritical) for vPortExitCritical
    queue.o(i.vQueueDelete) refers to heap_1.o(i.vPortFree) for vPortFree
    queue.o(i.xQueueCreate) refers to heap_1.o(i.pvPortMalloc) for pvPortMalloc
    queue.o(i.xQueueCreate) refers to list.o(i.vListInitialise) for vListInitialise
    queue.o(i.xQueueCreate) refers to heap_1.o(i.vPortFree) for vPortFree
    queue.o(i.xQueueCreateMutex) refers to heap_1.o(i.pvPortMalloc) for pvPortMalloc
    queue.o(i.xQueueCreateMutex) refers to list.o(i.vListInitialise) for vListInitialise
    queue.o(i.xQueueCreateMutex) refers to queue.o(i.xQueueGenericSend) for xQueueGenericSend
    queue.o(i.xQueueGenericReceive) refers to port.o(i.vPortEnterCritical) for vPortEnterCritical
    queue.o(i.xQueueGenericReceive) refers to queue.o(i.prvCopyDataFromQueue) for prvCopyDataFromQueue
    queue.o(i.xQueueGenericReceive) refers to tasks.o(i.xTaskGetCurrentTaskHandle) for xTaskGetCurrentTaskHandle
    queue.o(i.xQueueGenericReceive) refers to tasks.o(i.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(i.xQueueGenericReceive) refers to port.o(i.vPortYieldFromISR) for vPortYieldFromISR
    queue.o(i.xQueueGenericReceive) refers to port.o(i.vPortExitCritical) for vPortExitCritical
    queue.o(i.xQueueGenericReceive) refers to tasks.o(i.vTaskSetTimeOutState) for vTaskSetTimeOutState
    queue.o(i.xQueueGenericReceive) refers to tasks.o(i.vTaskSuspendAll) for vTaskSuspendAll
    queue.o(i.xQueueGenericReceive) refers to tasks.o(i.xTaskCheckForTimeOut) for xTaskCheckForTimeOut
    queue.o(i.xQueueGenericReceive) refers to queue.o(i.prvIsQueueEmpty) for prvIsQueueEmpty
    queue.o(i.xQueueGenericReceive) refers to tasks.o(i.vTaskPriorityInherit) for vTaskPriorityInherit
    queue.o(i.xQueueGenericReceive) refers to tasks.o(i.vTaskPlaceOnEventList) for vTaskPlaceOnEventList
    queue.o(i.xQueueGenericReceive) refers to queue.o(i.prvUnlockQueue) for prvUnlockQueue
    queue.o(i.xQueueGenericReceive) refers to tasks.o(i.xTaskResumeAll) for xTaskResumeAll
    queue.o(i.xQueueGenericSend) refers to port.o(i.vPortEnterCritical) for vPortEnterCritical
    queue.o(i.xQueueGenericSend) refers to queue.o(i.prvCopyDataToQueue) for prvCopyDataToQueue
    queue.o(i.xQueueGenericSend) refers to tasks.o(i.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(i.xQueueGenericSend) refers to port.o(i.vPortYieldFromISR) for vPortYieldFromISR
    queue.o(i.xQueueGenericSend) refers to port.o(i.vPortExitCritical) for vPortExitCritical
    queue.o(i.xQueueGenericSend) refers to tasks.o(i.vTaskSetTimeOutState) for vTaskSetTimeOutState
    queue.o(i.xQueueGenericSend) refers to tasks.o(i.vTaskSuspendAll) for vTaskSuspendAll
    queue.o(i.xQueueGenericSend) refers to tasks.o(i.xTaskCheckForTimeOut) for xTaskCheckForTimeOut
    queue.o(i.xQueueGenericSend) refers to queue.o(i.prvIsQueueFull) for prvIsQueueFull
    queue.o(i.xQueueGenericSend) refers to tasks.o(i.vTaskPlaceOnEventList) for vTaskPlaceOnEventList
    queue.o(i.xQueueGenericSend) refers to queue.o(i.prvUnlockQueue) for prvUnlockQueue
    queue.o(i.xQueueGenericSend) refers to tasks.o(i.xTaskResumeAll) for xTaskResumeAll
    queue.o(i.xQueueGenericSendFromISR) refers to port.o(.emb_text) for vPortSetInterruptMask
    queue.o(i.xQueueGenericSendFromISR) refers to queue.o(i.prvCopyDataToQueue) for prvCopyDataToQueue
    queue.o(i.xQueueGenericSendFromISR) refers to tasks.o(i.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(i.xQueueReceiveFromISR) refers to port.o(.emb_text) for vPortSetInterruptMask
    queue.o(i.xQueueReceiveFromISR) refers to queue.o(i.prvCopyDataFromQueue) for prvCopyDataFromQueue
    queue.o(i.xQueueReceiveFromISR) refers to tasks.o(i.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    tasks.o(i.prvAllocateTCBAndStack) refers to heap_1.o(i.pvPortMalloc) for pvPortMalloc
    tasks.o(i.prvAllocateTCBAndStack) refers to heap_1.o(i.vPortFree) for vPortFree
    tasks.o(i.prvAllocateTCBAndStack) refers to memseta.o(.text) for __aeabi_memset
    tasks.o(i.prvCheckTasksWaitingTermination) refers to tasks.o(i.vTaskSuspendAll) for vTaskSuspendAll
    tasks.o(i.prvCheckTasksWaitingTermination) refers to tasks.o(i.xTaskResumeAll) for xTaskResumeAll
    tasks.o(i.prvCheckTasksWaitingTermination) refers to port.o(i.vPortEnterCritical) for vPortEnterCritical
    tasks.o(i.prvCheckTasksWaitingTermination) refers to list.o(i.vListRemove) for vListRemove
    tasks.o(i.prvCheckTasksWaitingTermination) refers to port.o(i.vPortExitCritical) for vPortExitCritical
    tasks.o(i.prvCheckTasksWaitingTermination) refers to tasks.o(i.prvDeleteTCB) for prvDeleteTCB
    tasks.o(i.prvCheckTasksWaitingTermination) refers to tasks.o(.data) for uxTasksDeleted
    tasks.o(i.prvCheckTasksWaitingTermination) refers to tasks.o(.bss) for xTasksWaitingTermination
    tasks.o(i.prvDeleteTCB) refers to heap_1.o(i.vPortFree) for vPortFree
    tasks.o(i.prvIdleTask) refers to tasks.o(i.prvCheckTasksWaitingTermination) for prvCheckTasksWaitingTermination
    tasks.o(i.prvIdleTask) refers to port.o(i.vPortYieldFromISR) for vPortYieldFromISR
    tasks.o(i.prvIdleTask) refers to main.o(i.vApplicationIdleHook) for vApplicationIdleHook
    tasks.o(i.prvIdleTask) refers to tasks.o(.bss) for pxReadyTasksLists
    tasks.o(i.prvInitialiseTCBVariables) refers to strncpy.o(.text) for strncpy
    tasks.o(i.prvInitialiseTCBVariables) refers to list.o(i.vListInitialiseItem) for vListInitialiseItem
    tasks.o(i.prvInitialiseTaskLists) refers to list.o(i.vListInitialise) for vListInitialise
    tasks.o(i.prvInitialiseTaskLists) refers to tasks.o(.bss) for pxReadyTasksLists
    tasks.o(i.prvInitialiseTaskLists) refers to tasks.o(.data) for pxDelayedTaskList
    tasks.o(i.uxTaskGetNumberOfTasks) refers to tasks.o(.data) for uxCurrentNumberOfTasks
    tasks.o(i.vTaskDelay) refers to tasks.o(i.vTaskSuspendAll) for vTaskSuspendAll
    tasks.o(i.vTaskDelay) refers to list.o(i.vListRemove) for vListRemove
    tasks.o(i.vTaskDelay) refers to list.o(i.vListInsert) for vListInsert
    tasks.o(i.vTaskDelay) refers to tasks.o(i.xTaskResumeAll) for xTaskResumeAll
    tasks.o(i.vTaskDelay) refers to port.o(i.vPortYieldFromISR) for vPortYieldFromISR
    tasks.o(i.vTaskDelay) refers to tasks.o(.data) for xTickCount
    tasks.o(i.vTaskDelayUntil) refers to tasks.o(i.vTaskSuspendAll) for vTaskSuspendAll
    tasks.o(i.vTaskDelayUntil) refers to list.o(i.vListRemove) for vListRemove
    tasks.o(i.vTaskDelayUntil) refers to list.o(i.vListInsert) for vListInsert
    tasks.o(i.vTaskDelayUntil) refers to tasks.o(i.xTaskResumeAll) for xTaskResumeAll
    tasks.o(i.vTaskDelayUntil) refers to port.o(i.vPortYieldFromISR) for vPortYieldFromISR
    tasks.o(i.vTaskDelayUntil) refers to tasks.o(.data) for xTickCount
    tasks.o(i.vTaskDelete) refers to port.o(i.vPortEnterCritical) for vPortEnterCritical
    tasks.o(i.vTaskDelete) refers to list.o(i.vListRemove) for vListRemove
    tasks.o(i.vTaskDelete) refers to list.o(i.vListInsertEnd) for vListInsertEnd
    tasks.o(i.vTaskDelete) refers to port.o(i.vPortExitCritical) for vPortExitCritical
    tasks.o(i.vTaskDelete) refers to port.o(i.vPortYieldFromISR) for vPortYieldFromISR
    tasks.o(i.vTaskDelete) refers to tasks.o(.data) for pxCurrentTCB
    tasks.o(i.vTaskDelete) refers to tasks.o(.bss) for xTasksWaitingTermination
    tasks.o(i.vTaskEndScheduler) refers to port.o(.emb_text) for vPortSetInterruptMask
    tasks.o(i.vTaskEndScheduler) refers to port.o(i.vPortEndScheduler) for vPortEndScheduler
    tasks.o(i.vTaskEndScheduler) refers to tasks.o(.data) for xSchedulerRunning
    tasks.o(i.vTaskIncrementTick) refers to list.o(i.vListRemove) for vListRemove
    tasks.o(i.vTaskIncrementTick) refers to list.o(i.vListInsertEnd) for vListInsertEnd
    tasks.o(i.vTaskIncrementTick) refers to main.o(i.vApplicationTickHook) for vApplicationTickHook
    tasks.o(i.vTaskIncrementTick) refers to tasks.o(.data) for uxSchedulerSuspended
    tasks.o(i.vTaskIncrementTick) refers to tasks.o(.bss) for pxReadyTasksLists
    tasks.o(i.vTaskMissedYield) refers to tasks.o(.data) for xMissedYield
    tasks.o(i.vTaskPlaceOnEventList) refers to list.o(i.vListInsert) for vListInsert
    tasks.o(i.vTaskPlaceOnEventList) refers to list.o(i.vListRemove) for vListRemove
    tasks.o(i.vTaskPlaceOnEventList) refers to list.o(i.vListInsertEnd) for vListInsertEnd
    tasks.o(i.vTaskPlaceOnEventList) refers to tasks.o(.data) for pxCurrentTCB
    tasks.o(i.vTaskPlaceOnEventList) refers to tasks.o(.bss) for xSuspendedTaskList
    tasks.o(i.vTaskPriorityDisinherit) refers to list.o(i.vListRemove) for vListRemove
    tasks.o(i.vTaskPriorityDisinherit) refers to list.o(i.vListInsertEnd) for vListInsertEnd
    tasks.o(i.vTaskPriorityDisinherit) refers to tasks.o(.data) for uxTopReadyPriority
    tasks.o(i.vTaskPriorityDisinherit) refers to tasks.o(.bss) for pxReadyTasksLists
    tasks.o(i.vTaskPriorityInherit) refers to list.o(i.vListRemove) for vListRemove
    tasks.o(i.vTaskPriorityInherit) refers to list.o(i.vListInsertEnd) for vListInsertEnd
    tasks.o(i.vTaskPriorityInherit) refers to tasks.o(.data) for pxCurrentTCB
    tasks.o(i.vTaskPriorityInherit) refers to tasks.o(.bss) for pxReadyTasksLists
    tasks.o(i.vTaskResume) refers to port.o(i.vPortEnterCritical) for vPortEnterCritical
    tasks.o(i.vTaskResume) refers to tasks.o(i.xTaskIsTaskSuspended) for xTaskIsTaskSuspended
    tasks.o(i.vTaskResume) refers to list.o(i.vListRemove) for vListRemove
    tasks.o(i.vTaskResume) refers to list.o(i.vListInsertEnd) for vListInsertEnd
    tasks.o(i.vTaskResume) refers to port.o(i.vPortYieldFromISR) for vPortYieldFromISR
    tasks.o(i.vTaskResume) refers to port.o(i.vPortExitCritical) for vPortExitCritical
    tasks.o(i.vTaskResume) refers to tasks.o(.data) for pxCurrentTCB
    tasks.o(i.vTaskResume) refers to tasks.o(.bss) for pxReadyTasksLists
    tasks.o(i.vTaskSetTimeOutState) refers to tasks.o(.data) for xNumOfOverflows
    tasks.o(i.vTaskStartScheduler) refers to tasks.o(i.xTaskGenericCreate) for xTaskGenericCreate
    tasks.o(i.vTaskStartScheduler) refers to port.o(.emb_text) for vPortSetInterruptMask
    tasks.o(i.vTaskStartScheduler) refers to port.o(i.xPortStartScheduler) for xPortStartScheduler
    tasks.o(i.vTaskStartScheduler) refers to tasks.o(i.prvIdleTask) for prvIdleTask
    tasks.o(i.vTaskStartScheduler) refers to tasks.o(.data) for xSchedulerRunning
    tasks.o(i.vTaskSuspend) refers to port.o(i.vPortEnterCritical) for vPortEnterCritical
    tasks.o(i.vTaskSuspend) refers to list.o(i.vListRemove) for vListRemove
    tasks.o(i.vTaskSuspend) refers to list.o(i.vListInsertEnd) for vListInsertEnd
    tasks.o(i.vTaskSuspend) refers to port.o(i.vPortExitCritical) for vPortExitCritical
    tasks.o(i.vTaskSuspend) refers to port.o(i.vPortYieldFromISR) for vPortYieldFromISR
    tasks.o(i.vTaskSuspend) refers to tasks.o(i.vTaskSwitchContext) for vTaskSwitchContext
    tasks.o(i.vTaskSuspend) refers to tasks.o(.data) for pxCurrentTCB
    tasks.o(i.vTaskSuspend) refers to tasks.o(.bss) for xSuspendedTaskList
    tasks.o(i.vTaskSuspendAll) refers to tasks.o(.data) for uxSchedulerSuspended
    tasks.o(i.vTaskSwitchContext) refers to tasks.o(.data) for uxSchedulerSuspended
    tasks.o(i.vTaskSwitchContext) refers to tasks.o(.bss) for pxReadyTasksLists
    tasks.o(i.xTaskCheckForTimeOut) refers to port.o(i.vPortEnterCritical) for vPortEnterCritical
    tasks.o(i.xTaskCheckForTimeOut) refers to tasks.o(i.vTaskSetTimeOutState) for vTaskSetTimeOutState
    tasks.o(i.xTaskCheckForTimeOut) refers to port.o(i.vPortExitCritical) for vPortExitCritical
    tasks.o(i.xTaskCheckForTimeOut) refers to tasks.o(.data) for xNumOfOverflows
    tasks.o(i.xTaskGenericCreate) refers to tasks.o(i.prvAllocateTCBAndStack) for prvAllocateTCBAndStack
    tasks.o(i.xTaskGenericCreate) refers to tasks.o(i.prvInitialiseTCBVariables) for prvInitialiseTCBVariables
    tasks.o(i.xTaskGenericCreate) refers to port.o(i.pxPortInitialiseStack) for pxPortInitialiseStack
    tasks.o(i.xTaskGenericCreate) refers to port.o(i.vPortEnterCritical) for vPortEnterCritical
    tasks.o(i.xTaskGenericCreate) refers to tasks.o(i.prvInitialiseTaskLists) for prvInitialiseTaskLists
    tasks.o(i.xTaskGenericCreate) refers to list.o(i.vListInsertEnd) for vListInsertEnd
    tasks.o(i.xTaskGenericCreate) refers to port.o(i.vPortExitCritical) for vPortExitCritical
    tasks.o(i.xTaskGenericCreate) refers to port.o(i.vPortYieldFromISR) for vPortYieldFromISR
    tasks.o(i.xTaskGenericCreate) refers to tasks.o(.data) for uxCurrentNumberOfTasks
    tasks.o(i.xTaskGenericCreate) refers to tasks.o(.bss) for pxReadyTasksLists
    tasks.o(i.xTaskGetCurrentTaskHandle) refers to tasks.o(.data) for pxCurrentTCB
    tasks.o(i.xTaskGetTickCount) refers to port.o(i.vPortEnterCritical) for vPortEnterCritical
    tasks.o(i.xTaskGetTickCount) refers to port.o(i.vPortExitCritical) for vPortExitCritical
    tasks.o(i.xTaskGetTickCount) refers to tasks.o(.data) for xTickCount
    tasks.o(i.xTaskGetTickCountFromISR) refers to tasks.o(.data) for xTickCount
    tasks.o(i.xTaskIsTaskSuspended) refers to tasks.o(.bss) for xSuspendedTaskList
    tasks.o(i.xTaskRemoveFromEventList) refers to list.o(i.vListRemove) for vListRemove
    tasks.o(i.xTaskRemoveFromEventList) refers to list.o(i.vListInsertEnd) for vListInsertEnd
    tasks.o(i.xTaskRemoveFromEventList) refers to tasks.o(.data) for uxSchedulerSuspended
    tasks.o(i.xTaskRemoveFromEventList) refers to tasks.o(.bss) for pxReadyTasksLists
    tasks.o(i.xTaskResumeAll) refers to port.o(i.vPortEnterCritical) for vPortEnterCritical
    tasks.o(i.xTaskResumeAll) refers to list.o(i.vListRemove) for vListRemove
    tasks.o(i.xTaskResumeAll) refers to list.o(i.vListInsertEnd) for vListInsertEnd
    tasks.o(i.xTaskResumeAll) refers to tasks.o(i.vTaskIncrementTick) for vTaskIncrementTick
    tasks.o(i.xTaskResumeAll) refers to port.o(i.vPortYieldFromISR) for vPortYieldFromISR
    tasks.o(i.xTaskResumeAll) refers to port.o(i.vPortExitCritical) for vPortExitCritical
    tasks.o(i.xTaskResumeAll) refers to tasks.o(.data) for uxSchedulerSuspended
    tasks.o(i.xTaskResumeAll) refers to tasks.o(.bss) for pxReadyTasksLists
    tasks.o(i.xTaskResumeFromISR) refers to tasks.o(i.xTaskIsTaskSuspended) for xTaskIsTaskSuspended
    tasks.o(i.xTaskResumeFromISR) refers to list.o(i.vListRemove) for vListRemove
    tasks.o(i.xTaskResumeFromISR) refers to list.o(i.vListInsertEnd) for vListInsertEnd
    tasks.o(i.xTaskResumeFromISR) refers to tasks.o(.data) for uxSchedulerSuspended
    tasks.o(i.xTaskResumeFromISR) refers to tasks.o(.bss) for pxReadyTasksLists
    heap_1.o(i.pvPortMalloc) refers to tasks.o(i.vTaskSuspendAll) for vTaskSuspendAll
    heap_1.o(i.pvPortMalloc) refers to tasks.o(i.xTaskResumeAll) for xTaskResumeAll
    heap_1.o(i.pvPortMalloc) refers to heap_1.o(.data) for xNextFreeByte
    heap_1.o(i.pvPortMalloc) refers to heap_1.o(.bss) for xHeap
    heap_1.o(i.vPortInitialiseBlocks) refers to heap_1.o(.data) for xNextFreeByte
    heap_1.o(i.xPortGetFreeHeapSize) refers to heap_1.o(.data) for xNextFreeByte
    port.o(.emb_text) refers to tasks.o(i.vTaskSwitchContext) for vTaskSwitchContext
    port.o(.emb_text) refers to tasks.o(.data) for pxCurrentTCB
    port.o(i.vPortEnterCritical) refers to port.o(.emb_text) for vPortSetInterruptMask
    port.o(i.vPortEnterCritical) refers to port.o(.data) for uxCriticalNesting
    port.o(i.vPortExitCritical) refers to port.o(.emb_text) for vPortClearInterruptMask
    port.o(i.vPortExitCritical) refers to port.o(.data) for uxCriticalNesting
    port.o(i.xPortStartScheduler) refers to port.o(i.prvSetupTimerInterrupt) for prvSetupTimerInterrupt
    port.o(i.xPortStartScheduler) refers to port.o(.emb_text) for vPortStartFirstTask
    port.o(i.xPortStartScheduler) refers to port.o(.data) for uxCriticalNesting
    port.o(i.xPortSysTickHandler) refers to port.o(.emb_text) for vPortSetInterruptMask
    port.o(i.xPortSysTickHandler) refers to tasks.o(i.vTaskIncrementTick) for vTaskIncrementTick
    main.o(i.SchedulerGatekeeperTask) refers to printfa.o(i.__0printf) for __2printf
    main.o(i.SchedulerGatekeeperTask) refers to tasks.o(i.vTaskSuspendAll) for vTaskSuspendAll
    main.o(i.SchedulerGatekeeperTask) refers to queue.o(i.xQueueGenericReceive) for xQueueGenericReceive
    main.o(i.SchedulerGatekeeperTask) refers to memcpya.o(.text) for __aeabi_memcpy4
    main.o(i.SchedulerGatekeeperTask) refers to main.o(i.isSchedulable) for isSchedulable
    main.o(i.SchedulerGatekeeperTask) refers to main.o(i.set_priority) for set_priority
    main.o(i.SchedulerGatekeeperTask) refers to tasks.o(i.vTaskDelete) for vTaskDelete
    main.o(i.SchedulerGatekeeperTask) refers to vector.o(i.vector_delete) for vector_delete
    main.o(i.SchedulerGatekeeperTask) refers to vector.o(i.vector_add) for vector_add
    main.o(i.SchedulerGatekeeperTask) refers to tasks.o(i.xTaskGenericCreate) for xTaskGenericCreate
    main.o(i.SchedulerGatekeeperTask) refers to f2d.o(.text) for __aeabi_f2d
    main.o(i.SchedulerGatekeeperTask) refers to tasks.o(i.xTaskResumeAll) for xTaskResumeAll
    main.o(i.SchedulerGatekeeperTask) refers to main.o(.conststring) for .conststring
    main.o(i.SchedulerGatekeeperTask) refers to main.o(.data) for xTaskQueue
    main.o(i.SchedulerGatekeeperTask) refers to main.o(.bss) for currentTasks
    main.o(i.SchedulerGatekeeperTask) refers to main.o(i.vTaskCreate) for vTaskCreate
    main.o(i.cpu_util) refers to printfa.o(i.__0printf) for __2printf
    main.o(i.cpu_util) refers to vector.o(i.vector_get) for vector_get
    main.o(i.cpu_util) refers to dfltui.o(.text) for __aeabi_ui2d
    main.o(i.cpu_util) refers to dmul.o(.text) for __aeabi_dmul
    main.o(i.cpu_util) refers to ddiv.o(.text) for __aeabi_ddiv
    main.o(i.cpu_util) refers to d2f.o(.text) for __aeabi_d2f
    main.o(i.cpu_util) refers to vector.o(i.vector_total) for vector_total
    main.o(i.cpu_util) refers to main.o(.bss) for currentTasks
    main.o(i.dynamic_task_admittance) refers to printfa.o(i.__0printf) for __2printf
    main.o(i.dynamic_task_admittance) refers to rand.o(.text) for rand
    main.o(i.dynamic_task_admittance) refers to main.o(i.generate_task) for generate_task
    main.o(i.dynamic_task_admittance) refers to memcpya.o(.text) for __aeabi_memcpy4
    main.o(i.dynamic_task_admittance) refers to queue.o(i.xQueueGenericSend) for xQueueGenericSend
    main.o(i.dynamic_task_admittance) refers to vector.o(i.vector_get) for vector_get
    main.o(i.dynamic_task_admittance) refers to tasks.o(i.vTaskDelay) for vTaskDelay
    main.o(i.dynamic_task_admittance) refers to main.o(.constdata) for .constdata
    main.o(i.dynamic_task_admittance) refers to main.o(.data) for xTaskQueue
    main.o(i.dynamic_task_admittance) refers to main.o(.bss) for currentTasksId
    main.o(i.dynamic_task_admittance) refers to main.o(.conststring) for .conststring
    main.o(i.generate_task) refers to rand.o(.text) for rand
    main.o(i.generate_task) refers to f2d.o(.text) for __aeabi_f2d
    main.o(i.generate_task) refers to printfa.o(i.__0printf) for __2printf
    main.o(i.generate_task) refers to memcpya.o(.text) for __aeabi_memcpy4
    main.o(i.generate_task) refers to main.o(.data) for task_index
    main.o(i.generate_task) refers to main.o(.conststring) for .conststring
    main.o(i.isSchedulable) refers to printfa.o(i.__0printf) for __2printf
    main.o(i.isSchedulable) refers to main.o(i.cpu_util) for cpu_util
    main.o(i.isSchedulable) refers to vector.o(i.vector_get) for vector_get
    main.o(i.isSchedulable) refers to fadd.o(.text) for __aeabi_fadd
    main.o(i.isSchedulable) refers to f2d.o(.text) for __aeabi_f2d
    main.o(i.isSchedulable) refers to cdcmple.o(.text) for __aeabi_cdcmple
    main.o(i.isSchedulable) refers to main.o(.bss) for currentTasks
    main.o(i.main) refers to printfa.o(i.__0printf) for __2printf
    main.o(i.main) refers to queue.o(i.xQueueCreateMutex) for xQueueCreateMutex
    main.o(i.main) refers to queue.o(i.xQueueCreate) for xQueueCreate
    main.o(i.main) refers to vector.o(i.vector_init) for vector_init
    main.o(i.main) refers to rand.o(.text) for srand
    main.o(i.main) refers to main.o(i.static_task_admittance) for static_task_admittance
    main.o(i.main) refers to tasks.o(i.xTaskGenericCreate) for xTaskGenericCreate
    main.o(i.main) refers to tasks.o(i.vTaskStartScheduler) for vTaskStartScheduler
    main.o(i.main) refers to main.o(.conststring) for .conststring
    main.o(i.main) refers to main.o(.data) for mutex
    main.o(i.main) refers to main.o(.bss) for currentTasks
    main.o(i.main) refers to main.o(i.dynamic_task_admittance) for dynamic_task_admittance
    main.o(i.main) refers to main.o(i.SchedulerGatekeeperTask) for SchedulerGatekeeperTask
    main.o(i.set_priority) refers to printfa.o(i.__0printf) for __2printf
    main.o(i.set_priority) refers to mallocr.o(i.__malloc$realloc) for malloc
    main.o(i.set_priority) refers to main.o(i.sortTask) for sortTask
    main.o(i.set_priority) refers to vector.o(i.vector_get) for vector_get
    main.o(i.set_priority) refers to mallocr.o(i.__free$realloc) for free
    main.o(i.set_priority) refers to main.o(.bss) for currentTasks
    main.o(i.sortTask) refers to vector.o(i.vector_get) for vector_get
    main.o(i.sortTask) refers to main.o(i.swap) for swap
    main.o(i.sortTask) refers to main.o(.bss) for currentTasks
    main.o(i.static_task_admittance) refers to rand.o(.text) for rand
    main.o(i.static_task_admittance) refers to printfa.o(i.__0printf) for __2printf
    main.o(i.static_task_admittance) refers to main.o(i.generate_task) for generate_task
    main.o(i.static_task_admittance) refers to memcpya.o(.text) for __aeabi_memcpy4
    main.o(i.static_task_admittance) refers to queue.o(i.xQueueGenericSend) for xQueueGenericSend
    main.o(i.static_task_admittance) refers to main.o(.conststring) for .conststring
    main.o(i.static_task_admittance) refers to main.o(.constdata) for .constdata
    main.o(i.static_task_admittance) refers to main.o(.data) for xTaskQueue
    main.o(i.vApplicationTickHook) refers to printfa.o(i.__0printf) for __2printf
    main.o(i.vApplicationTickHook) refers to memcpya.o(.text) for __aeabi_memcpy4
    main.o(i.vApplicationTickHook) refers to queue.o(i.xQueueGenericSend) for xQueueGenericSend
    main.o(i.vApplicationTickHook) refers to queue.o(i.xQueueGenericSendFromISR) for xQueueGenericSendFromISR
    main.o(i.vApplicationTickHook) refers to main.o(.data) for iCount
    main.o(i.vApplicationTickHook) refers to main.o(.conststring) for .conststring
    main.o(i.vApplicationTickHook) refers to main.o(.constdata) for .constdata
    main.o(i.vTaskCreate) refers to printfa.o(i.__0printf) for __2printf
    main.o(i.vTaskCreate) refers to queue.o(i.xQueueGenericReceive) for xQueueGenericReceive
    main.o(i.vTaskCreate) refers to vector.o(i.vector_get) for vector_get
    main.o(i.vTaskCreate) refers to tasks.o(i.vTaskDelay) for vTaskDelay
    main.o(i.vTaskCreate) refers to queue.o(i.xQueueGenericSend) for xQueueGenericSend
    main.o(i.vTaskCreate) refers to main.o(.data) for mutex
    main.o(i.vTaskCreate) refers to main.o(.bss) for currentTasks
    basic_io.o(i.vPrintString) refers to tasks.o(i.vTaskSuspendAll) for vTaskSuspendAll
    basic_io.o(i.vPrintString) refers to printfa.o(i.__0printf) for __2printf
    basic_io.o(i.vPrintString) refers to tasks.o(i.xTaskResumeAll) for xTaskResumeAll
    basic_io.o(i.vPrintStringAndNumber) refers to tasks.o(i.vTaskSuspendAll) for vTaskSuspendAll
    basic_io.o(i.vPrintStringAndNumber) refers to printfa.o(i.__0printf) for __2printf
    basic_io.o(i.vPrintStringAndNumber) refers to tasks.o(i.xTaskResumeAll) for xTaskResumeAll
    vector.o(i.vector_add) refers to vector.o(i.vector_resize) for vector_resize
    vector.o(i.vector_delete) refers to vector.o(i.vector_resize) for vector_resize
    vector.o(i.vector_free) refers to mallocr.o(i.__free$realloc) for free
    vector.o(i.vector_init) refers to mallocr.o(i.__malloc$realloc) for malloc
    vector.o(i.vector_resize) refers to mallocr.o(i.realloc) for realloc
    startup_mps_cm3.o(RESET) refers to startup_mps_cm3.o(STACK) for __initial_sp
    startup_mps_cm3.o(RESET) refers to startup_mps_cm3.o(.text) for Reset_Handler
    startup_mps_cm3.o(RESET) refers to port.o(.emb_text) for vPortSVCHandler
    startup_mps_cm3.o(RESET) refers to port.o(i.xPortSysTickHandler) for xPortSysTickHandler
    startup_mps_cm3.o(.text) refers to entry.o(.ARM.Collect$$$$00000000) for __main
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry10a.o(.ARM.Collect$$$$0000000D) for __rt_final_cpp
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry11a.o(.ARM.Collect$$$$0000000F) for __rt_final_exit
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry7b.o(.ARM.Collect$$$$00000008) for _main_clock
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry8b.o(.ARM.Collect$$$$0000000A) for _main_cpp_init
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry9a.o(.ARM.Collect$$$$0000000B) for _main_init
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry5.o(.ARM.Collect$$$$00000004) for _main_scatterload
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry2.o(.ARM.Collect$$$$00000001) for _main_stk
    rand.o(.text) refers to rand.o(.data) for .data
    printfb.o(i.__0fprintf$bare) refers to printfb.o(i._printf_core) for _printf_core
    printfb.o(i.__0fprintf$bare) refers to basic_io.o(i.fputc) for fputc
    printfb.o(i.__0printf$bare) refers to printfb.o(i._printf_core) for _printf_core
    printfb.o(i.__0printf$bare) refers to basic_io.o(i.fputc) for fputc
    printfb.o(i.__0printf$bare) refers to stdout.o(.data) for __stdout
    printfb.o(i.__0snprintf$bare) refers to printfb.o(i._printf_core) for _printf_core
    printfb.o(i.__0snprintf$bare) refers to printfb.o(i._snputc) for _snputc
    printfb.o(i.__0sprintf$bare) refers to printfb.o(i._printf_core) for _printf_core
    printfb.o(i.__0sprintf$bare) refers to printfb.o(i._sputc) for _sputc
    printfb.o(i.__0vfprintf$bare) refers to printfb.o(i._printf_core) for _printf_core
    printfb.o(i.__0vfprintf$bare) refers to basic_io.o(i.fputc) for fputc
    printfb.o(i.__0vprintf$bare) refers to printfb.o(i._printf_core) for _printf_core
    printfb.o(i.__0vprintf$bare) refers to basic_io.o(i.fputc) for fputc
    printfb.o(i.__0vprintf$bare) refers to stdout.o(.data) for __stdout
    printfb.o(i.__0vsnprintf$bare) refers to printfb.o(i._printf_core) for _printf_core
    printfb.o(i.__0vsnprintf$bare) refers to printfb.o(i._snputc) for _snputc
    printfb.o(i.__0vsprintf$bare) refers to printfb.o(i._printf_core) for _printf_core
    printfb.o(i.__0vsprintf$bare) refers to printfb.o(i._sputc) for _sputc
    printf0.o(i.__0fprintf$0) refers to printf0.o(i._printf_core) for _printf_core
    printf0.o(i.__0fprintf$0) refers to basic_io.o(i.fputc) for fputc
    printf0.o(i.__0printf$0) refers to printf0.o(i._printf_core) for _printf_core
    printf0.o(i.__0printf$0) refers to basic_io.o(i.fputc) for fputc
    printf0.o(i.__0printf$0) refers to stdout.o(.data) for __stdout
    printf0.o(i.__0snprintf$0) refers to printf0.o(i._printf_core) for _printf_core
    printf0.o(i.__0snprintf$0) refers to printf0.o(i._snputc) for _snputc
    printf0.o(i.__0sprintf$0) refers to printf0.o(i._printf_core) for _printf_core
    printf0.o(i.__0sprintf$0) refers to printf0.o(i._sputc) for _sputc
    printf0.o(i.__0vfprintf$0) refers to printf0.o(i._printf_core) for _printf_core
    printf0.o(i.__0vfprintf$0) refers to basic_io.o(i.fputc) for fputc
    printf0.o(i.__0vprintf$0) refers to printf0.o(i._printf_core) for _printf_core
    printf0.o(i.__0vprintf$0) refers to basic_io.o(i.fputc) for fputc
    printf0.o(i.__0vprintf$0) refers to stdout.o(.data) for __stdout
    printf0.o(i.__0vsnprintf$0) refers to printf0.o(i._printf_core) for _printf_core
    printf0.o(i.__0vsnprintf$0) refers to printf0.o(i._snputc) for _snputc
    printf0.o(i.__0vsprintf$0) refers to printf0.o(i._printf_core) for _printf_core
    printf0.o(i.__0vsprintf$0) refers to printf0.o(i._sputc) for _sputc
    printf1.o(i.__0fprintf$1) refers to printf1.o(i._printf_core) for _printf_core
    printf1.o(i.__0fprintf$1) refers to basic_io.o(i.fputc) for fputc
    printf1.o(i.__0printf$1) refers to printf1.o(i._printf_core) for _printf_core
    printf1.o(i.__0printf$1) refers to basic_io.o(i.fputc) for fputc
    printf1.o(i.__0printf$1) refers to stdout.o(.data) for __stdout
    printf1.o(i.__0snprintf$1) refers to printf1.o(i._printf_core) for _printf_core
    printf1.o(i.__0snprintf$1) refers to printf1.o(i._snputc) for _snputc
    printf1.o(i.__0sprintf$1) refers to printf1.o(i._printf_core) for _printf_core
    printf1.o(i.__0sprintf$1) refers to printf1.o(i._sputc) for _sputc
    printf1.o(i.__0vfprintf$1) refers to printf1.o(i._printf_core) for _printf_core
    printf1.o(i.__0vfprintf$1) refers to basic_io.o(i.fputc) for fputc
    printf1.o(i.__0vprintf$1) refers to printf1.o(i._printf_core) for _printf_core
    printf1.o(i.__0vprintf$1) refers to basic_io.o(i.fputc) for fputc
    printf1.o(i.__0vprintf$1) refers to stdout.o(.data) for __stdout
    printf1.o(i.__0vsnprintf$1) refers to printf1.o(i._printf_core) for _printf_core
    printf1.o(i.__0vsnprintf$1) refers to printf1.o(i._snputc) for _snputc
    printf1.o(i.__0vsprintf$1) refers to printf1.o(i._printf_core) for _printf_core
    printf1.o(i.__0vsprintf$1) refers to printf1.o(i._sputc) for _sputc
    printf1.o(i._printf_core) refers to uidiv.o(.text) for __aeabi_uidivmod
    printf2.o(i.__0fprintf$2) refers to printf2.o(i._printf_core) for _printf_core
    printf2.o(i.__0fprintf$2) refers to basic_io.o(i.fputc) for fputc
    printf2.o(i.__0printf$2) refers to printf2.o(i._printf_core) for _printf_core
    printf2.o(i.__0printf$2) refers to basic_io.o(i.fputc) for fputc
    printf2.o(i.__0printf$2) refers to stdout.o(.data) for __stdout
    printf2.o(i.__0snprintf$2) refers to printf2.o(i._printf_core) for _printf_core
    printf2.o(i.__0snprintf$2) refers to printf2.o(i._snputc) for _snputc
    printf2.o(i.__0sprintf$2) refers to printf2.o(i._printf_core) for _printf_core
    printf2.o(i.__0sprintf$2) refers to printf2.o(i._sputc) for _sputc
    printf2.o(i.__0vfprintf$2) refers to printf2.o(i._printf_core) for _printf_core
    printf2.o(i.__0vfprintf$2) refers to basic_io.o(i.fputc) for fputc
    printf2.o(i.__0vprintf$2) refers to printf2.o(i._printf_core) for _printf_core
    printf2.o(i.__0vprintf$2) refers to basic_io.o(i.fputc) for fputc
    printf2.o(i.__0vprintf$2) refers to stdout.o(.data) for __stdout
    printf2.o(i.__0vsnprintf$2) refers to printf2.o(i._printf_core) for _printf_core
    printf2.o(i.__0vsnprintf$2) refers to printf2.o(i._snputc) for _snputc
    printf2.o(i.__0vsprintf$2) refers to printf2.o(i._printf_core) for _printf_core
    printf2.o(i.__0vsprintf$2) refers to printf2.o(i._sputc) for _sputc
    printf3.o(i.__0fprintf$3) refers to printf3.o(i._printf_core) for _printf_core
    printf3.o(i.__0fprintf$3) refers to basic_io.o(i.fputc) for fputc
    printf3.o(i.__0printf$3) refers to printf3.o(i._printf_core) for _printf_core
    printf3.o(i.__0printf$3) refers to basic_io.o(i.fputc) for fputc
    printf3.o(i.__0printf$3) refers to stdout.o(.data) for __stdout
    printf3.o(i.__0snprintf$3) refers to printf3.o(i._printf_core) for _printf_core
    printf3.o(i.__0snprintf$3) refers to printf3.o(i._snputc) for _snputc
    printf3.o(i.__0sprintf$3) refers to printf3.o(i._printf_core) for _printf_core
    printf3.o(i.__0sprintf$3) refers to printf3.o(i._sputc) for _sputc
    printf3.o(i.__0vfprintf$3) refers to printf3.o(i._printf_core) for _printf_core
    printf3.o(i.__0vfprintf$3) refers to basic_io.o(i.fputc) for fputc
    printf3.o(i.__0vprintf$3) refers to printf3.o(i._printf_core) for _printf_core
    printf3.o(i.__0vprintf$3) refers to basic_io.o(i.fputc) for fputc
    printf3.o(i.__0vprintf$3) refers to stdout.o(.data) for __stdout
    printf3.o(i.__0vsnprintf$3) refers to printf3.o(i._printf_core) for _printf_core
    printf3.o(i.__0vsnprintf$3) refers to printf3.o(i._snputc) for _snputc
    printf3.o(i.__0vsprintf$3) refers to printf3.o(i._printf_core) for _printf_core
    printf3.o(i.__0vsprintf$3) refers to printf3.o(i._sputc) for _sputc
    printf3.o(i._printf_core) refers to uidiv.o(.text) for __aeabi_uidivmod
    printf4.o(i.__0fprintf$4) refers to printf4.o(i._printf_core) for _printf_core
    printf4.o(i.__0fprintf$4) refers to basic_io.o(i.fputc) for fputc
    printf4.o(i.__0printf$4) refers to printf4.o(i._printf_core) for _printf_core
    printf4.o(i.__0printf$4) refers to basic_io.o(i.fputc) for fputc
    printf4.o(i.__0printf$4) refers to stdout.o(.data) for __stdout
    printf4.o(i.__0snprintf$4) refers to printf4.o(i._printf_core) for _printf_core
    printf4.o(i.__0snprintf$4) refers to printf4.o(i._snputc) for _snputc
    printf4.o(i.__0sprintf$4) refers to printf4.o(i._printf_core) for _printf_core
    printf4.o(i.__0sprintf$4) refers to printf4.o(i._sputc) for _sputc
    printf4.o(i.__0vfprintf$4) refers to printf4.o(i._printf_core) for _printf_core
    printf4.o(i.__0vfprintf$4) refers to basic_io.o(i.fputc) for fputc
    printf4.o(i.__0vprintf$4) refers to printf4.o(i._printf_core) for _printf_core
    printf4.o(i.__0vprintf$4) refers to basic_io.o(i.fputc) for fputc
    printf4.o(i.__0vprintf$4) refers to stdout.o(.data) for __stdout
    printf4.o(i.__0vsnprintf$4) refers to printf4.o(i._printf_core) for _printf_core
    printf4.o(i.__0vsnprintf$4) refers to printf4.o(i._snputc) for _snputc
    printf4.o(i.__0vsprintf$4) refers to printf4.o(i._printf_core) for _printf_core
    printf4.o(i.__0vsprintf$4) refers to printf4.o(i._sputc) for _sputc
    printf4.o(i._printf_core) refers to uldiv.o(.text) for __aeabi_uldivmod
    printf5.o(i.__0fprintf$5) refers to printf5.o(i._printf_core) for _printf_core
    printf5.o(i.__0fprintf$5) refers to basic_io.o(i.fputc) for fputc
    printf5.o(i.__0printf$5) refers to printf5.o(i._printf_core) for _printf_core
    printf5.o(i.__0printf$5) refers to basic_io.o(i.fputc) for fputc
    printf5.o(i.__0printf$5) refers to stdout.o(.data) for __stdout
    printf5.o(i.__0snprintf$5) refers to printf5.o(i._printf_core) for _printf_core
    printf5.o(i.__0snprintf$5) refers to printf5.o(i._snputc) for _snputc
    printf5.o(i.__0sprintf$5) refers to printf5.o(i._printf_core) for _printf_core
    printf5.o(i.__0sprintf$5) refers to printf5.o(i._sputc) for _sputc
    printf5.o(i.__0vfprintf$5) refers to printf5.o(i._printf_core) for _printf_core
    printf5.o(i.__0vfprintf$5) refers to basic_io.o(i.fputc) for fputc
    printf5.o(i.__0vprintf$5) refers to printf5.o(i._printf_core) for _printf_core
    printf5.o(i.__0vprintf$5) refers to basic_io.o(i.fputc) for fputc
    printf5.o(i.__0vprintf$5) refers to stdout.o(.data) for __stdout
    printf5.o(i.__0vsnprintf$5) refers to printf5.o(i._printf_core) for _printf_core
    printf5.o(i.__0vsnprintf$5) refers to printf5.o(i._snputc) for _snputc
    printf5.o(i.__0vsprintf$5) refers to printf5.o(i._printf_core) for _printf_core
    printf5.o(i.__0vsprintf$5) refers to printf5.o(i._sputc) for _sputc
    printf5.o(i._printf_core) refers to uldiv.o(.text) for __aeabi_uldivmod
    printf6.o(i.__0fprintf$6) refers to printf6.o(i._printf_core) for _printf_core
    printf6.o(i.__0fprintf$6) refers to basic_io.o(i.fputc) for fputc
    printf6.o(i.__0printf$6) refers to printf6.o(i._printf_core) for _printf_core
    printf6.o(i.__0printf$6) refers to basic_io.o(i.fputc) for fputc
    printf6.o(i.__0printf$6) refers to stdout.o(.data) for __stdout
    printf6.o(i.__0snprintf$6) refers to printf6.o(i._printf_core) for _printf_core
    printf6.o(i.__0snprintf$6) refers to printf6.o(i._snputc) for _snputc
    printf6.o(i.__0sprintf$6) refers to printf6.o(i._printf_core) for _printf_core
    printf6.o(i.__0sprintf$6) refers to printf6.o(i._sputc) for _sputc
    printf6.o(i.__0vfprintf$6) refers to printf6.o(i._printf_core) for _printf_core
    printf6.o(i.__0vfprintf$6) refers to basic_io.o(i.fputc) for fputc
    printf6.o(i.__0vprintf$6) refers to printf6.o(i._printf_core) for _printf_core
    printf6.o(i.__0vprintf$6) refers to basic_io.o(i.fputc) for fputc
    printf6.o(i.__0vprintf$6) refers to stdout.o(.data) for __stdout
    printf6.o(i.__0vsnprintf$6) refers to printf6.o(i._printf_core) for _printf_core
    printf6.o(i.__0vsnprintf$6) refers to printf6.o(i._snputc) for _snputc
    printf6.o(i.__0vsprintf$6) refers to printf6.o(i._printf_core) for _printf_core
    printf6.o(i.__0vsprintf$6) refers to printf6.o(i._sputc) for _sputc
    printf6.o(i._printf_core) refers to printf6.o(i._printf_pre_padding) for _printf_pre_padding
    printf6.o(i._printf_core) refers to uidiv.o(.text) for __aeabi_uidivmod
    printf6.o(i._printf_core) refers to printf6.o(i._printf_post_padding) for _printf_post_padding
    printf7.o(i.__0fprintf$7) refers to printf7.o(i._printf_core) for _printf_core
    printf7.o(i.__0fprintf$7) refers to basic_io.o(i.fputc) for fputc
    printf7.o(i.__0printf$7) refers to printf7.o(i._printf_core) for _printf_core
    printf7.o(i.__0printf$7) refers to basic_io.o(i.fputc) for fputc
    printf7.o(i.__0printf$7) refers to stdout.o(.data) for __stdout
    printf7.o(i.__0snprintf$7) refers to printf7.o(i._printf_core) for _printf_core
    printf7.o(i.__0snprintf$7) refers to printf7.o(i._snputc) for _snputc
    printf7.o(i.__0sprintf$7) refers to printf7.o(i._printf_core) for _printf_core
    printf7.o(i.__0sprintf$7) refers to printf7.o(i._sputc) for _sputc
    printf7.o(i.__0vfprintf$7) refers to printf7.o(i._printf_core) for _printf_core
    printf7.o(i.__0vfprintf$7) refers to basic_io.o(i.fputc) for fputc
    printf7.o(i.__0vprintf$7) refers to printf7.o(i._printf_core) for _printf_core
    printf7.o(i.__0vprintf$7) refers to basic_io.o(i.fputc) for fputc
    printf7.o(i.__0vprintf$7) refers to stdout.o(.data) for __stdout
    printf7.o(i.__0vsnprintf$7) refers to printf7.o(i._printf_core) for _printf_core
    printf7.o(i.__0vsnprintf$7) refers to printf7.o(i._snputc) for _snputc
    printf7.o(i.__0vsprintf$7) refers to printf7.o(i._printf_core) for _printf_core
    printf7.o(i.__0vsprintf$7) refers to printf7.o(i._sputc) for _sputc
    printf7.o(i._printf_core) refers to printf7.o(i._printf_pre_padding) for _printf_pre_padding
    printf7.o(i._printf_core) refers to uldiv.o(.text) for __aeabi_uldivmod
    printf7.o(i._printf_core) refers to printf7.o(i._printf_post_padding) for _printf_post_padding
    printf8.o(i.__0fprintf$8) refers to printf8.o(i._printf_core) for _printf_core
    printf8.o(i.__0fprintf$8) refers to basic_io.o(i.fputc) for fputc
    printf8.o(i.__0printf$8) refers to printf8.o(i._printf_core) for _printf_core
    printf8.o(i.__0printf$8) refers to basic_io.o(i.fputc) for fputc
    printf8.o(i.__0printf$8) refers to stdout.o(.data) for __stdout
    printf8.o(i.__0snprintf$8) refers to printf8.o(i._printf_core) for _printf_core
    printf8.o(i.__0snprintf$8) refers to printf8.o(i._snputc) for _snputc
    printf8.o(i.__0sprintf$8) refers to printf8.o(i._printf_core) for _printf_core
    printf8.o(i.__0sprintf$8) refers to printf8.o(i._sputc) for _sputc
    printf8.o(i.__0vfprintf$8) refers to printf8.o(i._printf_core) for _printf_core
    printf8.o(i.__0vfprintf$8) refers to basic_io.o(i.fputc) for fputc
    printf8.o(i.__0vprintf$8) refers to printf8.o(i._printf_core) for _printf_core
    printf8.o(i.__0vprintf$8) refers to basic_io.o(i.fputc) for fputc
    printf8.o(i.__0vprintf$8) refers to stdout.o(.data) for __stdout
    printf8.o(i.__0vsnprintf$8) refers to printf8.o(i._printf_core) for _printf_core
    printf8.o(i.__0vsnprintf$8) refers to printf8.o(i._snputc) for _snputc
    printf8.o(i.__0vsprintf$8) refers to printf8.o(i._printf_core) for _printf_core
    printf8.o(i.__0vsprintf$8) refers to printf8.o(i._sputc) for _sputc
    printf8.o(i._printf_core) refers to printf8.o(i._printf_pre_padding) for _printf_pre_padding
    printf8.o(i._printf_core) refers to uldiv.o(.text) for __aeabi_uldivmod
    printf8.o(i._printf_core) refers to printf8.o(i._printf_post_padding) for _printf_post_padding
    printfa.o(i.__0fprintf) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i.__0fprintf) refers to printfa.o(i._printf_core) for _printf_core
    printfa.o(i.__0fprintf) refers to basic_io.o(i.fputc) for fputc
    printfa.o(i.__0printf) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i.__0printf) refers to printfa.o(i._printf_core) for _printf_core
    printfa.o(i.__0printf) refers to basic_io.o(i.fputc) for fputc
    printfa.o(i.__0printf) refers to stdout.o(.data) for __stdout
    printfa.o(i.__0snprintf) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i.__0snprintf) refers to printfa.o(i._printf_core) for _printf_core
    printfa.o(i.__0snprintf) refers to printfa.o(i._snputc) for _snputc
    printfa.o(i.__0sprintf) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i.__0sprintf) refers to printfa.o(i._printf_core) for _printf_core
    printfa.o(i.__0sprintf) refers to printfa.o(i._sputc) for _sputc
    printfa.o(i.__0vfprintf) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i.__0vfprintf) refers to printfa.o(i._printf_core) for _printf_core
    printfa.o(i.__0vfprintf) refers to basic_io.o(i.fputc) for fputc
    printfa.o(i.__0vprintf) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i.__0vprintf) refers to printfa.o(i._printf_core) for _printf_core
    printfa.o(i.__0vprintf) refers to basic_io.o(i.fputc) for fputc
    printfa.o(i.__0vprintf) refers to stdout.o(.data) for __stdout
    printfa.o(i.__0vsnprintf) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i.__0vsnprintf) refers to printfa.o(i._printf_core) for _printf_core
    printfa.o(i.__0vsnprintf) refers to printfa.o(i._snputc) for _snputc
    printfa.o(i.__0vsprintf) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i.__0vsprintf) refers to printfa.o(i._printf_core) for _printf_core
    printfa.o(i.__0vsprintf) refers to printfa.o(i._sputc) for _sputc
    printfa.o(i._fp_digits) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i._fp_digits) refers to dmul.o(.text) for __aeabi_dmul
    printfa.o(i._fp_digits) refers to ddiv.o(.text) for __aeabi_ddiv
    printfa.o(i._fp_digits) refers to cdrcmple.o(.text) for __aeabi_cdrcmple
    printfa.o(i._fp_digits) refers to dadd.o(.text) for __aeabi_dadd
    printfa.o(i._fp_digits) refers to dfixul.o(.text) for __aeabi_d2ulz
    printfa.o(i._fp_digits) refers to uldiv.o(.text) for __aeabi_uldivmod
    printfa.o(i._printf_core) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i._printf_core) refers to printfa.o(i._printf_pre_padding) for _printf_pre_padding
    printfa.o(i._printf_core) refers to uldiv.o(.text) for __aeabi_uldivmod
    printfa.o(i._printf_core) refers to printfa.o(i._printf_post_padding) for _printf_post_padding
    printfa.o(i._printf_core) refers to printfa.o(i._fp_digits) for _fp_digits
    printfa.o(i._printf_core) refers to uidiv.o(.text) for __aeabi_uidivmod
    printfa.o(i._printf_post_padding) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i._printf_pre_padding) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i._snputc) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i._sputc) refers (Special) to iusefp.o(.text) for __I$use$fp
    malloc.o(i.free) refers to mvars.o(.data) for __microlib_freelist
    malloc.o(i.malloc) refers to mvars.o(.data) for __microlib_freelist_initialised
    malloc.o(i.malloc) refers to mvars.o(.data) for __microlib_freelist
    malloc.o(i.malloc) refers to startup_mps_cm3.o(HEAP) for __heap_base
    mallocr.o(i.__free$realloc) refers to mvars.o(.data) for __microlib_freelist
    mallocr.o(i.__malloc$realloc) refers to mallocr.o(i.internal_alloc) for internal_alloc
    mallocr.o(i.__malloc$realloc) refers to mvars.o(.data) for __microlib_freelist_initialised
    mallocr.o(i.__malloc$realloc) refers to startup_mps_cm3.o(HEAP) for __heap_base
    mallocr.o(i.__malloc$realloc) refers to mvars.o(.data) for __microlib_freelist
    mallocr.o(i.internal_alloc) refers to memcpya.o(.text) for __aeabi_memcpy
    mallocr.o(i.internal_alloc) refers to mvars.o(.data) for __microlib_freelist
    mallocr.o(i.realloc) refers to mallocr.o(i.__free$realloc) for free
    mallocr.o(i.realloc) refers to mallocr.o(i.internal_alloc) for internal_alloc
    mallocr.o(i.realloc) refers to mallocr.o(i.__malloc$realloc) for malloc
    mallocr.o(i.realloc) refers to mvars.o(.data) for __microlib_freelist
    malloca.o(i.__aligned_malloc) refers to mvars.o(.data) for __microlib_freelist_initialised
    malloca.o(i.__aligned_malloc) refers to mvars.o(.data) for __microlib_freelist
    malloca.o(i.__aligned_malloc) refers to startup_mps_cm3.o(HEAP) for __heap_base
    malloca.o(i.__free$memalign) refers to mvars.o(.data) for __microlib_freelist
    malloca.o(i.__malloc$memalign) refers to malloca.o(i.__aligned_malloc) for __aligned_malloc
    mallocra.o(i.__aligned_malloc$realloc) refers to mallocra.o(i.internal_alloc) for internal_alloc
    mallocra.o(i.__aligned_malloc$realloc) refers to mvars.o(.data) for __microlib_freelist_initialised
    mallocra.o(i.__aligned_malloc$realloc) refers to startup_mps_cm3.o(HEAP) for __heap_base
    mallocra.o(i.__aligned_malloc$realloc) refers to mvars.o(.data) for __microlib_freelist
    mallocra.o(i.__free$realloc$memalign) refers to mvars.o(.data) for __microlib_freelist
    mallocra.o(i.__malloc$realloc$memalign) refers to mallocra.o(i.__aligned_malloc$realloc) for __aligned_malloc$realloc
    mallocra.o(i.__realloc$memalign) refers to mallocra.o(i.__free$realloc$memalign) for __free$realloc$memalign
    mallocra.o(i.__realloc$memalign) refers to mallocra.o(i.internal_alloc) for internal_alloc
    mallocra.o(i.__realloc$memalign) refers to mallocra.o(i.__malloc$realloc$memalign) for __malloc$realloc$memalign
    mallocra.o(i.__realloc$memalign) refers to mvars.o(.data) for __microlib_freelist
    mallocra.o(i.internal_alloc) refers to memcpya.o(.text) for __aeabi_memcpy
    mallocra.o(i.internal_alloc) refers to mvars.o(.data) for __microlib_freelist
    fadd.o(.text) refers (Special) to iusefp.o(.text) for __I$use$fp
    fadd.o(.text) refers to fepilogue.o(.text) for _float_epilogue
    dmul.o(.text) refers (Special) to iusefp.o(.text) for __I$use$fp
    dmul.o(.text) refers to depilogue.o(.text) for _double_epilogue
    ddiv.o(.text) refers (Special) to iusefp.o(.text) for __I$use$fp
    ddiv.o(.text) refers to depilogue.o(.text) for _double_round
    dfltui.o(.text) refers (Special) to iusefp.o(.text) for __I$use$fp
    dfltui.o(.text) refers to depilogue.o(.text) for _double_epilogue
    f2d.o(.text) refers (Special) to iusefp.o(.text) for __I$use$fp
    cdcmple.o(.text) refers (Special) to iusefp.o(.text) for __I$use$fp
    d2f.o(.text) refers (Special) to iusefp.o(.text) for __I$use$fp
    d2f.o(.text) refers to fepilogue.o(.text) for _float_round
    entry2.o(.ARM.Collect$$$$00000001) refers to entry2.o(.ARM.Collect$$$$00002712) for __lit__00000000
    entry2.o(.ARM.Collect$$$$00002712) refers to startup_mps_cm3.o(STACK) for __initial_sp
    entry2.o(__vectab_stack_and_reset_area) refers to startup_mps_cm3.o(STACK) for __initial_sp
    entry2.o(__vectab_stack_and_reset_area) refers to entry.o(.ARM.Collect$$$$00000000) for __main
    entry5.o(.ARM.Collect$$$$00000004) refers to init.o(.text) for __scatterload
    entry9a.o(.ARM.Collect$$$$0000000B) refers to main.o(i.main) for main
    entry9b.o(.ARM.Collect$$$$0000000C) refers to main.o(i.main) for main
    uldiv.o(.text) refers to llushr.o(.text) for __aeabi_llsr
    uldiv.o(.text) refers to llshl.o(.text) for __aeabi_llsl
    depilogue.o(.text) refers to llshl.o(.text) for __aeabi_llsl
    depilogue.o(.text) refers to llushr.o(.text) for __aeabi_llsr
    dadd.o(.text) refers to llshl.o(.text) for __aeabi_llsl
    dadd.o(.text) refers to llsshr.o(.text) for __aeabi_lasr
    dadd.o(.text) refers to depilogue.o(.text) for _double_epilogue
    dfixul.o(.text) refers to llushr.o(.text) for __aeabi_llsr
    dfixul.o(.text) refers to llshl.o(.text) for __aeabi_llsl
    init.o(.text) refers to entry5.o(.ARM.Collect$$$$00000004) for __main_after_scatterload


==============================================================================

Removing Unused input sections from the image.

    Removing queue.o(i.uxQueueMessagesWaiting), (18 bytes).
    Removing queue.o(i.uxQueueMessagesWaitingFromISR), (6 bytes).
    Removing queue.o(i.vQueueDelete), (18 bytes).
    Removing queue.o(i.xQueueIsQueueEmptyFromISR), (16 bytes).
    Removing queue.o(i.xQueueIsQueueFullFromISR), (20 bytes).
    Removing queue.o(i.xQueueReceiveFromISR), (84 bytes).
    Removing tasks.o(i.uxTaskGetNumberOfTasks), (12 bytes).
    Removing tasks.o(i.vTaskDelayUntil), (164 bytes).
    Removing tasks.o(i.vTaskEndScheduler), (24 bytes).
    Removing tasks.o(i.vTaskResume), (104 bytes).
    Removing tasks.o(i.vTaskSuspend), (112 bytes).
    Removing tasks.o(i.xTaskGetTickCount), (24 bytes).
    Removing tasks.o(i.xTaskGetTickCountFromISR), (12 bytes).
    Removing tasks.o(i.xTaskIsTaskSuspended), (68 bytes).
    Removing tasks.o(i.xTaskResumeFromISR), (120 bytes).
    Removing heap_1.o(i.vPortInitialiseBlocks), (12 bytes).
    Removing heap_1.o(i.xPortGetFreeHeapSize), (16 bytes).
    Removing port.o(i.vPortEndScheduler), (2 bytes).
    Removing main.o(i.vApplicationMallocFailedHook), (4 bytes).
    Removing main.o(i.vApplicationStackOverflowHook), (4 bytes).
    Removing basic_io.o(i.vPrintString), (20 bytes).
    Removing basic_io.o(i.vPrintStringAndNumber), (36 bytes).
    Removing vector.o(i.vector_free), (12 bytes).
    Removing vector.o(i.vector_set), (18 bytes).

24 unused section(s) (total 926 bytes) removed from the image.

==============================================================================

Image Symbol Table

    Local Symbols

    Symbol Name                              Value     Ov Type        Size  Object(Section)

    RESET                                    0x00000000   Section      192  startup_mps_cm3.o(RESET)
    ../clib/microlib/division.c              0x00000000   Number         0  uldiv.o ABSOLUTE
    ../clib/microlib/division.c              0x00000000   Number         0  uidiv.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry8b.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry7b.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry11b.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry9a.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry2.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry8a.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry5.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry9b.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry10a.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry10b.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry7a.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry11a.o ABSOLUTE
    ../clib/microlib/longlong.c              0x00000000   Number         0  llsshr.o ABSOLUTE
    ../clib/microlib/longlong.c              0x00000000   Number         0  llushr.o ABSOLUTE
    ../clib/microlib/longlong.c              0x00000000   Number         0  llshl.o ABSOLUTE
    ../clib/microlib/malloc/malloc.c         0x00000000   Number         0  mallocra.o ABSOLUTE
    ../clib/microlib/malloc/malloc.c         0x00000000   Number         0  mallocr.o ABSOLUTE
    ../clib/microlib/malloc/malloc.c         0x00000000   Number         0  malloca.o ABSOLUTE
    ../clib/microlib/malloc/malloc.c         0x00000000   Number         0  malloc.o ABSOLUTE
    ../clib/microlib/malloc/mvars.c          0x00000000   Number         0  mvars.o ABSOLUTE
    ../clib/microlib/printf/printf.c         0x00000000   Number         0  printfb.o ABSOLUTE
    ../clib/microlib/printf/printf.c         0x00000000   Number         0  printf0.o ABSOLUTE
    ../clib/microlib/printf/printf.c         0x00000000   Number         0  printf1.o ABSOLUTE
    ../clib/microlib/printf/printf.c         0x00000000   Number         0  printf2.o ABSOLUTE
    ../clib/microlib/printf/printf.c         0x00000000   Number         0  printf4.o ABSOLUTE
    ../clib/microlib/printf/printf.c         0x00000000   Number         0  printf5.o ABSOLUTE
    ../clib/microlib/printf/printf.c         0x00000000   Number         0  printf6.o ABSOLUTE
    ../clib/microlib/printf/printf.c         0x00000000   Number         0  printf7.o ABSOLUTE
    ../clib/microlib/printf/printf.c         0x00000000   Number         0  printf8.o ABSOLUTE
    ../clib/microlib/printf/printf.c         0x00000000   Number         0  printfa.o ABSOLUTE
    ../clib/microlib/printf/printf.c         0x00000000   Number         0  printf3.o ABSOLUTE
    ../clib/microlib/printf/stubs.s          0x00000000   Number         0  stubs.o ABSOLUTE
    ../clib/microlib/stdio/streams.c         0x00000000   Number         0  stdout.o ABSOLUTE
    ../clib/microlib/stdlib/rand.c           0x00000000   Number         0  rand.o ABSOLUTE
    ../clib/microlib/string/memcpy.c         0x00000000   Number         0  memcpya.o ABSOLUTE
    ../clib/microlib/string/memcpy.c         0x00000000   Number         0  memcpyb.o ABSOLUTE
    ../clib/microlib/string/memset.c         0x00000000   Number         0  memseta.o ABSOLUTE
    ../clib/microlib/string/strncpy.c        0x00000000   Number         0  strncpy.o ABSOLUTE
    ../clib/microlib/stubs.s                 0x00000000   Number         0  iusefp.o ABSOLUTE
    ../fplib/microlib/d2f.c                  0x00000000   Number         0  d2f.o ABSOLUTE
    ../fplib/microlib/f2d.c                  0x00000000   Number         0  f2d.o ABSOLUTE
    ../fplib/microlib/fpadd.c                0x00000000   Number         0  dadd.o ABSOLUTE
    ../fplib/microlib/fpadd.c                0x00000000   Number         0  fadd.o ABSOLUTE
    ../fplib/microlib/fpdiv.c                0x00000000   Number         0  ddiv.o ABSOLUTE
    ../fplib/microlib/fpepilogue.c           0x00000000   Number         0  fepilogue.o ABSOLUTE
    ../fplib/microlib/fpepilogue.c           0x00000000   Number         0  depilogue.o ABSOLUTE
    ../fplib/microlib/fpfix.c                0x00000000   Number         0  dfixul.o ABSOLUTE
    ../fplib/microlib/fpflt.c                0x00000000   Number         0  dfltui.o ABSOLUTE
    ../fplib/microlib/fpmul.c                0x00000000   Number         0  dmul.o ABSOLUTE
    ..\..\FreeRTOS-Source\demo_code\basic_io.c 0x00000000   Number         0  basic_io.o ABSOLUTE
    ..\..\FreeRTOS-Source\list.c             0x00000000   Number         0  list.o ABSOLUTE
    ..\..\FreeRTOS-Source\portable\MemMang\heap_1.c 0x00000000   Number         0  heap_1.o ABSOLUTE
    ..\..\FreeRTOS-Source\portable\RVDS\ARM_CM3\port.c 0x00000000   Number         0  port.o ABSOLUTE
    ..\..\FreeRTOS-Source\queue.c            0x00000000   Number         0  queue.o ABSOLUTE
    ..\..\FreeRTOS-Source\tasks.c            0x00000000   Number         0  tasks.o ABSOLUTE
    ..\\..\\FreeRTOS-Source\\portable\\RVDS\\ARM_CM3\\port.c 0x00000000   Number         0  port.o ABSOLUTE
    cdcmple.s                                0x00000000   Number         0  cdcmple.o ABSOLUTE
    cdrcmple.s                               0x00000000   Number         0  cdrcmple.o ABSOLUTE
    dc.s                                     0x00000000   Number         0  dc.o ABSOLUTE
    handlers.s                               0x00000000   Number         0  handlers.o ABSOLUTE
    init.s                                   0x00000000   Number         0  init.o ABSOLUTE
    main.c                                   0x00000000   Number         0  main.o ABSOLUTE
    startup_MPS_CM3.s                        0x00000000   Number         0  startup_mps_cm3.o ABSOLUTE
    vector.c                                 0x00000000   Number         0  vector.o ABSOLUTE
    .ARM.Collect$$$$00000000                 0x000000c0   Section        0  entry.o(.ARM.Collect$$$$00000000)
    .ARM.Collect$$$$00000001                 0x000000c0   Section        4  entry2.o(.ARM.Collect$$$$00000001)
    .ARM.Collect$$$$00000004                 0x000000c4   Section        4  entry5.o(.ARM.Collect$$$$00000004)
    .ARM.Collect$$$$00000008                 0x000000c8   Section        0  entry7b.o(.ARM.Collect$$$$00000008)
    .ARM.Collect$$$$0000000A                 0x000000c8   Section        0  entry8b.o(.ARM.Collect$$$$0000000A)
    .ARM.Collect$$$$0000000B                 0x000000c8   Section        8  entry9a.o(.ARM.Collect$$$$0000000B)
    .ARM.Collect$$$$0000000D                 0x000000d0   Section        0  entry10a.o(.ARM.Collect$$$$0000000D)
    .ARM.Collect$$$$0000000F                 0x000000d0   Section        0  entry11a.o(.ARM.Collect$$$$0000000F)
    .ARM.Collect$$$$00002712                 0x000000d0   Section        4  entry2.o(.ARM.Collect$$$$00002712)
    __lit__00000000                          0x000000d0   Data           4  entry2.o(.ARM.Collect$$$$00002712)
    .emb_text                                0x000000d4   Section      136  port.o(.emb_text)
    .text                                    0x0000015c   Section       28  startup_mps_cm3.o(.text)
    .text                                    0x00000178   Section        0  rand.o(.text)
    .text                                    0x0000019c   Section        0  memcpya.o(.text)
    .text                                    0x000001c0   Section        0  memseta.o(.text)
    .text                                    0x000001e4   Section        0  strncpy.o(.text)
    .text                                    0x000001fc   Section        0  fadd.o(.text)
    .text                                    0x000002ac   Section        0  dmul.o(.text)
    .text                                    0x00000390   Section        0  ddiv.o(.text)
    .text                                    0x0000046e   Section        0  dfltui.o(.text)
    .text                                    0x00000488   Section        0  f2d.o(.text)
    .text                                    0x000004b0   Section       48  cdcmple.o(.text)
    .text                                    0x000004e0   Section        0  d2f.o(.text)
    .text                                    0x00000518   Section        0  uidiv.o(.text)
    .text                                    0x00000544   Section        0  uldiv.o(.text)
    .text                                    0x000005a6   Section        0  iusefp.o(.text)
    .text                                    0x000005a6   Section        0  fepilogue.o(.text)
    .text                                    0x00000614   Section        0  depilogue.o(.text)
    .text                                    0x000006ce   Section        0  dadd.o(.text)
    .text                                    0x0000081c   Section        0  dfixul.o(.text)
    .text                                    0x0000084c   Section       48  cdrcmple.o(.text)
    .text                                    0x0000087c   Section       36  init.o(.text)
    .text                                    0x000008a0   Section        0  llshl.o(.text)
    .text                                    0x000008be   Section        0  llushr.o(.text)
    .text                                    0x000008de   Section        0  llsshr.o(.text)
    i.SchedulerGatekeeperTask                0x00000904   Section        0  main.o(i.SchedulerGatekeeperTask)
    SchedulerGatekeeperTask                  0x00000905   Thumb Code   236  main.o(i.SchedulerGatekeeperTask)
    i.__0printf                              0x00000b48   Section        0  printfa.o(i.__0printf)
    i.__free$realloc                         0x00000b68   Section        0  mallocr.o(i.__free$realloc)
    i.__malloc$realloc                       0x00000bc4   Section        0  mallocr.o(i.__malloc$realloc)
    i.__scatterload_copy                     0x00000c14   Section       14  handlers.o(i.__scatterload_copy)
    i.__scatterload_null                     0x00000c22   Section        2  handlers.o(i.__scatterload_null)
    i.__scatterload_zeroinit                 0x00000c24   Section       14  handlers.o(i.__scatterload_zeroinit)
    i._fp_digits                             0x00000c34   Section        0  printfa.o(i._fp_digits)
    _fp_digits                               0x00000c35   Thumb Code   366  printfa.o(i._fp_digits)
    i._printf_core                           0x00000db8   Section        0  printfa.o(i._printf_core)
    _printf_core                             0x00000db9   Thumb Code  1744  printfa.o(i._printf_core)
    i._printf_post_padding                   0x00001494   Section        0  printfa.o(i._printf_post_padding)
    _printf_post_padding                     0x00001495   Thumb Code    36  printfa.o(i._printf_post_padding)
    i._printf_pre_padding                    0x000014b8   Section        0  printfa.o(i._printf_pre_padding)
    _printf_pre_padding                      0x000014b9   Thumb Code    46  printfa.o(i._printf_pre_padding)
    i.cpu_util                               0x000014e8   Section        0  main.o(i.cpu_util)
    cpu_util                                 0x000014e9   Thumb Code   108  main.o(i.cpu_util)
    i.dynamic_task_admittance                0x00001590   Section        0  main.o(i.dynamic_task_admittance)
    dynamic_task_admittance                  0x00001591   Thumb Code   182  main.o(i.dynamic_task_admittance)
    i.fputc                                  0x000016fc   Section        0  basic_io.o(i.fputc)
    i.generate_task                          0x00001720   Section        0  main.o(i.generate_task)
    generate_task                            0x00001721   Thumb Code   146  main.o(i.generate_task)
    i.internal_alloc                         0x000017bc   Section        0  mallocr.o(i.internal_alloc)
    internal_alloc                           0x000017bd   Thumb Code    76  mallocr.o(i.internal_alloc)
    i.isSchedulable                          0x0000180c   Section        0  main.o(i.isSchedulable)
    isSchedulable                            0x0000180d   Thumb Code   104  main.o(i.isSchedulable)
    i.main                                   0x000018b8   Section        0  main.o(i.main)
    i.prvAllocateTCBAndStack                 0x0000199c   Section        0  tasks.o(i.prvAllocateTCBAndStack)
    prvAllocateTCBAndStack                   0x0000199d   Thumb Code    58  tasks.o(i.prvAllocateTCBAndStack)
    i.prvCheckTasksWaitingTermination        0x000019d8   Section        0  tasks.o(i.prvCheckTasksWaitingTermination)
    prvCheckTasksWaitingTermination          0x000019d9   Thumb Code    94  tasks.o(i.prvCheckTasksWaitingTermination)
    i.prvCopyDataFromQueue                   0x00001a44   Section        0  queue.o(i.prvCopyDataFromQueue)
    prvCopyDataFromQueue                     0x00001a45   Thumb Code    42  queue.o(i.prvCopyDataFromQueue)
    i.prvCopyDataToQueue                     0x00001a6e   Section        0  queue.o(i.prvCopyDataToQueue)
    prvCopyDataToQueue                       0x00001a6f   Thumb Code   104  queue.o(i.prvCopyDataToQueue)
    i.prvDeleteTCB                           0x00001ad6   Section        0  tasks.o(i.prvDeleteTCB)
    prvDeleteTCB                             0x00001ad7   Thumb Code    18  tasks.o(i.prvDeleteTCB)
    i.prvIdleTask                            0x00001ae8   Section        0  tasks.o(i.prvIdleTask)
    prvIdleTask                              0x00001ae9   Thumb Code    24  tasks.o(i.prvIdleTask)
    i.prvInitialiseTCBVariables              0x00001b04   Section        0  tasks.o(i.prvInitialiseTCBVariables)
    prvInitialiseTCBVariables                0x00001b05   Thumb Code    70  tasks.o(i.prvInitialiseTCBVariables)
    i.prvInitialiseTaskLists                 0x00001b4c   Section        0  tasks.o(i.prvInitialiseTaskLists)
    prvInitialiseTaskLists                   0x00001b4d   Thumb Code    70  tasks.o(i.prvInitialiseTaskLists)
    i.prvIsQueueEmpty                        0x00001bb4   Section        0  queue.o(i.prvIsQueueEmpty)
    prvIsQueueEmpty                          0x00001bb5   Thumb Code    28  queue.o(i.prvIsQueueEmpty)
    i.prvIsQueueFull                         0x00001bd0   Section        0  queue.o(i.prvIsQueueFull)
    prvIsQueueFull                           0x00001bd1   Thumb Code    32  queue.o(i.prvIsQueueFull)
    i.prvSetupTimerInterrupt                 0x00001bf0   Section        0  port.o(i.prvSetupTimerInterrupt)
    prvSetupTimerInterrupt                   0x00001bf1   Thumb Code    16  port.o(i.prvSetupTimerInterrupt)
    i.prvUnlockQueue                         0x00001c00   Section        0  queue.o(i.prvUnlockQueue)
    prvUnlockQueue                           0x00001c01   Thumb Code   110  queue.o(i.prvUnlockQueue)
    i.pvPortMalloc                           0x00001c70   Section        0  heap_1.o(i.pvPortMalloc)
    i.pxPortInitialiseStack                  0x00001cc8   Section        0  port.o(i.pxPortInitialiseStack)
    i.realloc                                0x00001ce4   Section        0  mallocr.o(i.realloc)
    i.set_priority                           0x00001d50   Section        0  main.o(i.set_priority)
    set_priority                             0x00001d51   Thumb Code    92  main.o(i.set_priority)
    i.sortTask                               0x00001e30   Section        0  main.o(i.sortTask)
    sortTask                                 0x00001e31   Thumb Code   112  main.o(i.sortTask)
    i.static_task_admittance                 0x00001ea4   Section        0  main.o(i.static_task_admittance)
    static_task_admittance                   0x00001ea5   Thumb Code    94  main.o(i.static_task_admittance)
    i.swap                                   0x00001f50   Section        0  main.o(i.swap)
    swap                                     0x00001f51   Thumb Code     8  main.o(i.swap)
    i.vApplicationIdleHook                   0x00001f58   Section        0  main.o(i.vApplicationIdleHook)
    i.vApplicationTickHook                   0x00001f5c   Section        0  main.o(i.vApplicationTickHook)
    i.vListInitialise                        0x00001fcc   Section        0  list.o(i.vListInitialise)
    i.vListInitialiseItem                    0x00001fe6   Section        0  list.o(i.vListInitialiseItem)
    i.vListInsert                            0x00001fec   Section        0  list.o(i.vListInsert)
    i.vListInsertEnd                         0x00002020   Section        0  list.o(i.vListInsertEnd)
    i.vListRemove                            0x0000203c   Section        0  list.o(i.vListRemove)
    i.vPortEnterCritical                     0x00002060   Section        0  port.o(i.vPortEnterCritical)
    i.vPortExitCritical                      0x00002078   Section        0  port.o(i.vPortExitCritical)
    i.vPortFree                              0x00002094   Section        0  heap_1.o(i.vPortFree)
    i.vPortYieldFromISR                      0x00002098   Section        0  port.o(i.vPortYieldFromISR)
    i.vTaskCreate                            0x000020a8   Section        0  main.o(i.vTaskCreate)
    vTaskCreate                              0x000020a9   Thumb Code    86  main.o(i.vTaskCreate)
    i.vTaskDelay                             0x00002140   Section        0  tasks.o(i.vTaskDelay)
    i.vTaskDelete                            0x000021a8   Section        0  tasks.o(i.vTaskDelete)
    i.vTaskIncrementTick                     0x0000221c   Section        0  tasks.o(i.vTaskIncrementTick)
    i.vTaskMissedYield                       0x000022ec   Section        0  tasks.o(i.vTaskMissedYield)
    i.vTaskPlaceOnEventList                  0x000022f8   Section        0  tasks.o(i.vTaskPlaceOnEventList)
    i.vTaskPriorityDisinherit                0x00002370   Section        0  tasks.o(i.vTaskPriorityDisinherit)
    i.vTaskPriorityInherit                   0x000023c0   Section        0  tasks.o(i.vTaskPriorityInherit)
    i.vTaskSetTimeOutState                   0x00002438   Section        0  tasks.o(i.vTaskSetTimeOutState)
    i.vTaskStartScheduler                    0x00002450   Section        0  tasks.o(i.vTaskStartScheduler)
    i.vTaskSuspendAll                        0x00002498   Section        0  tasks.o(i.vTaskSuspendAll)
    i.vTaskSwitchContext                     0x000024a8   Section        0  tasks.o(i.vTaskSwitchContext)
    i.vector_add                             0x00002518   Section        0  vector.o(i.vector_add)
    i.vector_delete                          0x0000253e   Section        0  vector.o(i.vector_delete)
    i.vector_get                             0x000025ae   Section        0  vector.o(i.vector_get)
    i.vector_init                            0x000025c6   Section        0  vector.o(i.vector_init)
    i.vector_resize                          0x000025de   Section        0  vector.o(i.vector_resize)
    vector_resize                            0x000025df   Thumb Code    24  vector.o(i.vector_resize)
    i.vector_total                           0x000025f6   Section        0  vector.o(i.vector_total)
    i.xPortStartScheduler                    0x000025fc   Section        0  port.o(i.xPortStartScheduler)
    i.xPortSysTickHandler                    0x00002630   Section        0  port.o(i.xPortSysTickHandler)
    i.xQueueCreate                           0x00002650   Section        0  queue.o(i.xQueueCreate)
    i.xQueueCreateMutex                      0x000026bc   Section        0  queue.o(i.xQueueCreateMutex)
    i.xQueueGenericReceive                   0x00002702   Section        0  queue.o(i.xQueueGenericReceive)
    i.xQueueGenericSend                      0x00002812   Section        0  queue.o(i.xQueueGenericSend)
    i.xQueueGenericSendFromISR               0x000028e0   Section        0  queue.o(i.xQueueGenericSendFromISR)
    i.xTaskCheckForTimeOut                   0x00002938   Section        0  tasks.o(i.xTaskCheckForTimeOut)
    i.xTaskGenericCreate                     0x0000299c   Section        0  tasks.o(i.xTaskGenericCreate)
    i.xTaskGetCurrentTaskHandle              0x00002aa8   Section        0  tasks.o(i.xTaskGetCurrentTaskHandle)
    i.xTaskRemoveFromEventList               0x00002ab4   Section        0  tasks.o(i.xTaskRemoveFromEventList)
    i.xTaskResumeAll                         0x00002b34   Section        0  tasks.o(i.xTaskResumeAll)
    .constdata                               0x00002c10   Section      128  main.o(.constdata)
    .conststring                             0x00002c90   Section      837  main.o(.conststring)
    .data                                    0x20000000   Section       56  tasks.o(.data)
    pxDelayedTaskList                        0x20000004   Data           4  tasks.o(.data)
    pxOverflowDelayedTaskList                0x20000008   Data           4  tasks.o(.data)
    uxTasksDeleted                           0x2000000c   Data           4  tasks.o(.data)
    uxCurrentNumberOfTasks                   0x20000010   Data           4  tasks.o(.data)
    xTickCount                               0x20000014   Data           4  tasks.o(.data)
    uxTopUsedPriority                        0x20000018   Data           4  tasks.o(.data)
    uxTopReadyPriority                       0x2000001c   Data           4  tasks.o(.data)
    xSchedulerRunning                        0x20000020   Data           4  tasks.o(.data)
    uxSchedulerSuspended                     0x20000024   Data           4  tasks.o(.data)
    uxMissedTicks                            0x20000028   Data           4  tasks.o(.data)
    xMissedYield                             0x2000002c   Data           4  tasks.o(.data)
    xNumOfOverflows                          0x20000030   Data           4  tasks.o(.data)
    uxTaskNumber                             0x20000034   Data           4  tasks.o(.data)
    .data                                    0x20000038   Section        4  heap_1.o(.data)
    xNextFreeByte                            0x20000038   Data           4  heap_1.o(.data)
    .data                                    0x2000003c   Section        4  port.o(.data)
    uxCriticalNesting                        0x2000003c   Data           4  port.o(.data)
    .data                                    0x20000040   Section       20  main.o(.data)
    task_index                               0x2000004c   Data           4  main.o(.data)
    iCount                                   0x20000050   Data           4  main.o(.data)
    .data                                    0x20000054   Section        4  rand.o(.data)
    _rand_state                              0x20000054   Data           4  rand.o(.data)
    .data                                    0x20000058   Section        4  stdout.o(.data)
    .data                                    0x2000005c   Section        4  mvars.o(.data)
    .data                                    0x20000060   Section        4  mvars.o(.data)
    .bss                                     0x20000064   Section      200  tasks.o(.bss)
    pxReadyTasksLists                        0x20000064   Data         100  tasks.o(.bss)
    xDelayedTaskList1                        0x200000c8   Data          20  tasks.o(.bss)
    xDelayedTaskList2                        0x200000dc   Data          20  tasks.o(.bss)
    xPendingReadyList                        0x200000f0   Data          20  tasks.o(.bss)
    xTasksWaitingTermination                 0x20000104   Data          20  tasks.o(.bss)
    xSuspendedTaskList                       0x20000118   Data          20  tasks.o(.bss)
    .bss                                     0x20000130   Section     6144  heap_1.o(.bss)
    xHeap                                    0x20000130   Data        6144  heap_1.o(.bss)
    .bss                                     0x20001930   Section       24  main.o(.bss)
    HEAP                                     0x20001948   Section     1024  startup_mps_cm3.o(HEAP)
    STACK                                    0x20001d48   Section      512  startup_mps_cm3.o(STACK)

    Global Symbols

    Symbol Name                              Value     Ov Type        Size  Object(Section)

    BuildAttributes$$THM_ISAv4$P$D$K$B$S$PE$A:L22UL41UL21$X:L11$S22US41US21$IEEE1$IW$USESV6$~STKCKD$USESV7$~SHL$OTIME$ROPI$EBA8$MICROLIB$REQ8$PRES8$EABIv2 0x00000000   Number         0  anon$$obj.o ABSOLUTE
    __ARM_use_no_argv                        0x00000000   Number         0  main.o ABSOLUTE
    __Vectors                                0x00000000   Data           4  startup_mps_cm3.o(RESET)
    _printf_a                                0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_c                                0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_charcount                        0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_d                                0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_e                                0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_f                                0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_flags                            0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_fp_dec                           0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_fp_hex                           0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_g                                0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_i                                0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_int_dec                          0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_l                                0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_lc                               0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_ll                               0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_lld                              0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_lli                              0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_llo                              0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_llu                              0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_llx                              0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_longlong_dec                     0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_longlong_hex                     0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_longlong_oct                     0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_ls                               0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_mbtowc                           0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_n                                0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_o                                0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_p                                0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_percent                          0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_pre_padding                      0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_return_value                     0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_s                                0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_sizespec                         0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_str                              0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_truncate_signed                  0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_truncate_unsigned                0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_u                                0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_wc                               0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_wctomb                           0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_widthprec                        0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_x                                0x00000000   Number         0  stubs.o ABSOLUTE
    __cpp_initialize__aeabi_                  - Undefined Weak Reference
    __cxa_finalize                            - Undefined Weak Reference
    __decompress                              - Undefined Weak Reference
    _clock_init                               - Undefined Weak Reference
    _microlib_exit                            - Undefined Weak Reference
    __main                                   0x000000c1   Thumb Code     0  entry.o(.ARM.Collect$$$$00000000)
    _main_stk                                0x000000c1   Thumb Code     0  entry2.o(.ARM.Collect$$$$00000001)
    _main_scatterload                        0x000000c5   Thumb Code     0  entry5.o(.ARM.Collect$$$$00000004)
    __main_after_scatterload                 0x000000c9   Thumb Code     0  entry5.o(.ARM.Collect$$$$00000004)
    _main_clock                              0x000000c9   Thumb Code     0  entry7b.o(.ARM.Collect$$$$00000008)
    _main_cpp_init                           0x000000c9   Thumb Code     0  entry8b.o(.ARM.Collect$$$$0000000A)
    _main_init                               0x000000c9   Thumb Code     0  entry9a.o(.ARM.Collect$$$$0000000B)
    __rt_final_cpp                           0x000000d1   Thumb Code     0  entry10a.o(.ARM.Collect$$$$0000000D)
    __rt_final_exit                          0x000000d1   Thumb Code     0  entry11a.o(.ARM.Collect$$$$0000000F)
    vPortSVCHandler                          0x000000d5   Thumb Code    28  port.o(.emb_text)
    vPortStartFirstTask                      0x000000f5   Thumb Code    12  port.o(.emb_text)
    xPortPendSVHandler                       0x00000105   Thumb Code    56  port.o(.emb_text)
    vPortSetInterruptMask                    0x00000141   Thumb Code    14  port.o(.emb_text)
    vPortClearInterruptMask                  0x0000014f   Thumb Code    14  port.o(.emb_text)
    Reset_Handler                            0x0000015d   Thumb Code     4  startup_mps_cm3.o(.text)
    NMI_Handler                              0x00000161   Thumb Code     2  startup_mps_cm3.o(.text)
    HardFault_Handler                        0x00000163   Thumb Code     2  startup_mps_cm3.o(.text)
    MemManage_Handler                        0x00000165   Thumb Code     2  startup_mps_cm3.o(.text)
    BusFault_Handler                         0x00000167   Thumb Code     2  startup_mps_cm3.o(.text)
    UsageFault_Handler                       0x00000169   Thumb Code     2  startup_mps_cm3.o(.text)
    SVC_Handler                              0x0000016b   Thumb Code     2  startup_mps_cm3.o(.text)
    DebugMon_Handler                         0x0000016d   Thumb Code     2  startup_mps_cm3.o(.text)
    PendSV_Handler                           0x0000016f   Thumb Code     2  startup_mps_cm3.o(.text)
    SysTick_Handler                          0x00000171   Thumb Code     2  startup_mps_cm3.o(.text)
    AACI_IRQHandler                          0x00000173   Thumb Code     0  startup_mps_cm3.o(.text)
    CAN_IRQHandler                           0x00000173   Thumb Code     0  startup_mps_cm3.o(.text)
    CHLCD_IRQHandler                         0x00000173   Thumb Code     0  startup_mps_cm3.o(.text)
    CLCD_IRQHandler                          0x00000173   Thumb Code     0  startup_mps_cm3.o(.text)
    CPU_CLCD_IRQHandler                      0x00000173   Thumb Code     0  startup_mps_cm3.o(.text)
    ENET_IRQHandler                          0x00000173   Thumb Code     0  startup_mps_cm3.o(.text)
    FLEXRAY_IRQHandler                       0x00000173   Thumb Code     0  startup_mps_cm3.o(.text)
    I2C_IRQHandler                           0x00000173   Thumb Code     0  startup_mps_cm3.o(.text)
    LIN_IRQHandler                           0x00000173   Thumb Code     0  startup_mps_cm3.o(.text)
    MCIA_IRQHandler                          0x00000173   Thumb Code     0  startup_mps_cm3.o(.text)
    MCIB_IRQHandler                          0x00000173   Thumb Code     0  startup_mps_cm3.o(.text)
    RTC_IRQHandler                           0x00000173   Thumb Code     0  startup_mps_cm3.o(.text)
    SPI_IRQHandler                           0x00000173   Thumb Code     0  startup_mps_cm3.o(.text)
    TIM0_IRQHandler                          0x00000173   Thumb Code     0  startup_mps_cm3.o(.text)
    TIM2_IRQHandler                          0x00000173   Thumb Code     0  startup_mps_cm3.o(.text)
    UART0_IRQHandler                         0x00000173   Thumb Code     0  startup_mps_cm3.o(.text)
    UART1_IRQHandler                         0x00000173   Thumb Code     0  startup_mps_cm3.o(.text)
    UART2_IRQHandler                         0x00000173   Thumb Code     0  startup_mps_cm3.o(.text)
    UART3_IRQHandler                         0x00000173   Thumb Code     0  startup_mps_cm3.o(.text)
    UART4_IRQHandler                         0x00000173   Thumb Code     0  startup_mps_cm3.o(.text)
    USBDC_IRQHandler                         0x00000173   Thumb Code     0  startup_mps_cm3.o(.text)
    USBHC_IRQHandler                         0x00000173   Thumb Code     0  startup_mps_cm3.o(.text)
    WDT_IRQHandler                           0x00000173   Thumb Code     0  startup_mps_cm3.o(.text)
    rand                                     0x00000179   Thumb Code    20  rand.o(.text)
    srand                                    0x0000018d   Thumb Code     6  rand.o(.text)
    __aeabi_memcpy                           0x0000019d   Thumb Code    36  memcpya.o(.text)
    __aeabi_memcpy4                          0x0000019d   Thumb Code     0  memcpya.o(.text)
    __aeabi_memcpy8                          0x0000019d   Thumb Code     0  memcpya.o(.text)
    __aeabi_memset                           0x000001c1   Thumb Code    14  memseta.o(.text)
    __aeabi_memset4                          0x000001c1   Thumb Code     0  memseta.o(.text)
    __aeabi_memset8                          0x000001c1   Thumb Code     0  memseta.o(.text)
    __aeabi_memclr                           0x000001cf   Thumb Code     4  memseta.o(.text)
    __aeabi_memclr4                          0x000001cf   Thumb Code     0  memseta.o(.text)
    __aeabi_memclr8                          0x000001cf   Thumb Code     0  memseta.o(.text)
    _memset$wrapper                          0x000001d3   Thumb Code    18  memseta.o(.text)
    strncpy                                  0x000001e5   Thumb Code    24  strncpy.o(.text)
    __aeabi_fadd                             0x000001fd   Thumb Code   164  fadd.o(.text)
    __aeabi_fsub                             0x000002a1   Thumb Code     6  fadd.o(.text)
    __aeabi_frsub                            0x000002a7   Thumb Code     6  fadd.o(.text)
    __aeabi_dmul                             0x000002ad   Thumb Code   228  dmul.o(.text)
    __aeabi_ddiv                             0x00000391   Thumb Code   222  ddiv.o(.text)
    __aeabi_ui2d                             0x0000046f   Thumb Code    26  dfltui.o(.text)
    __aeabi_f2d                              0x00000489   Thumb Code    38  f2d.o(.text)
    __aeabi_cdcmpeq                          0x000004b1   Thumb Code     0  cdcmple.o(.text)
    __aeabi_cdcmple                          0x000004b1   Thumb Code    48  cdcmple.o(.text)
    __aeabi_d2f                              0x000004e1   Thumb Code    56  d2f.o(.text)
    __aeabi_uidiv                            0x00000519   Thumb Code     0  uidiv.o(.text)
    __aeabi_uidivmod                         0x00000519   Thumb Code    44  uidiv.o(.text)
    __aeabi_uldivmod                         0x00000545   Thumb Code    98  uldiv.o(.text)
    __I$use$fp                               0x000005a7   Thumb Code     0  iusefp.o(.text)
    _float_round                             0x000005a7   Thumb Code    18  fepilogue.o(.text)
    _float_epilogue                          0x000005b9   Thumb Code    92  fepilogue.o(.text)
    _double_round                            0x00000615   Thumb Code    30  depilogue.o(.text)
    _double_epilogue                         0x00000633   Thumb Code   156  depilogue.o(.text)
    __aeabi_dadd                             0x000006cf   Thumb Code   322  dadd.o(.text)
    __aeabi_dsub                             0x00000811   Thumb Code     6  dadd.o(.text)
    __aeabi_drsub                            0x00000817   Thumb Code     6  dadd.o(.text)
    __aeabi_d2ulz                            0x0000081d   Thumb Code    48  dfixul.o(.text)
    __aeabi_cdrcmple                         0x0000084d   Thumb Code    48  cdrcmple.o(.text)
    __scatterload                            0x0000087d   Thumb Code    28  init.o(.text)
    __scatterload_rt2                        0x0000087d   Thumb Code     0  init.o(.text)
    __aeabi_llsl                             0x000008a1   Thumb Code    30  llshl.o(.text)
    _ll_shift_l                              0x000008a1   Thumb Code     0  llshl.o(.text)
    __aeabi_llsr                             0x000008bf   Thumb Code    32  llushr.o(.text)
    _ll_ushift_r                             0x000008bf   Thumb Code     0  llushr.o(.text)
    __aeabi_lasr                             0x000008df   Thumb Code    36  llsshr.o(.text)
    _ll_sshift_r                             0x000008df   Thumb Code     0  llsshr.o(.text)
    __0printf                                0x00000b49   Thumb Code    22  printfa.o(i.__0printf)
    __1printf                                0x00000b49   Thumb Code     0  printfa.o(i.__0printf)
    __2printf                                0x00000b49   Thumb Code     0  printfa.o(i.__0printf)
    __c89printf                              0x00000b49   Thumb Code     0  printfa.o(i.__0printf)
    printf                                   0x00000b49   Thumb Code     0  printfa.o(i.__0printf)
    free                                     0x00000b69   Thumb Code    88  mallocr.o(i.__free$realloc)
    malloc                                   0x00000bc5   Thumb Code    64  mallocr.o(i.__malloc$realloc)
    __scatterload_copy                       0x00000c15   Thumb Code    14  handlers.o(i.__scatterload_copy)
    __scatterload_null                       0x00000c23   Thumb Code     2  handlers.o(i.__scatterload_null)
    __scatterload_zeroinit                   0x00000c25   Thumb Code    14  handlers.o(i.__scatterload_zeroinit)
    fputc                                    0x000016fd   Thumb Code    30  basic_io.o(i.fputc)
    main                                     0x000018b9   Thumb Code   142  main.o(i.main)
    pvPortMalloc                             0x00001c71   Thumb Code    78  heap_1.o(i.pvPortMalloc)
    pxPortInitialiseStack                    0x00001cc9   Thumb Code    26  port.o(i.pxPortInitialiseStack)
    realloc                                  0x00001ce5   Thumb Code   102  mallocr.o(i.realloc)
    vApplicationIdleHook                     0x00001f59   Thumb Code     2  main.o(i.vApplicationIdleHook)
    vApplicationTickHook                     0x00001f5d   Thumb Code    90  main.o(i.vApplicationTickHook)
    vListInitialise                          0x00001fcd   Thumb Code    26  list.o(i.vListInitialise)
    vListInitialiseItem                      0x00001fe7   Thumb Code     6  list.o(i.vListInitialiseItem)
    vListInsert                              0x00001fed   Thumb Code    52  list.o(i.vListInsert)
    vListInsertEnd                           0x00002021   Thumb Code    28  list.o(i.vListInsertEnd)
    vListRemove                              0x0000203d   Thumb Code    36  list.o(i.vListRemove)
    vPortEnterCritical                       0x00002061   Thumb Code    18  port.o(i.vPortEnterCritical)
    vPortExitCritical                        0x00002079   Thumb Code    24  port.o(i.vPortExitCritical)
    vPortFree                                0x00002095   Thumb Code     2  heap_1.o(i.vPortFree)
    vPortYieldFromISR                        0x00002099   Thumb Code    10  port.o(i.vPortYieldFromISR)
    vTaskDelay                               0x00002141   Thumb Code    86  tasks.o(i.vTaskDelay)
    vTaskDelete                              0x000021a9   Thumb Code    94  tasks.o(i.vTaskDelete)
    vTaskIncrementTick                       0x0000221d   Thumb Code   174  tasks.o(i.vTaskIncrementTick)
    vTaskMissedYield                         0x000022ed   Thumb Code     8  tasks.o(i.vTaskMissedYield)
    vTaskPlaceOnEventList                    0x000022f9   Thumb Code    98  tasks.o(i.vTaskPlaceOnEventList)
    vTaskPriorityDisinherit                  0x00002371   Thumb Code    70  tasks.o(i.vTaskPriorityDisinherit)
    vTaskPriorityInherit                     0x000023c1   Thumb Code   108  tasks.o(i.vTaskPriorityInherit)
    vTaskSetTimeOutState                     0x00002439   Thumb Code    14  tasks.o(i.vTaskSetTimeOutState)
    vTaskStartScheduler                      0x00002451   Thumb Code    52  tasks.o(i.vTaskStartScheduler)
    vTaskSuspendAll                          0x00002499   Thumb Code    12  tasks.o(i.vTaskSuspendAll)
    vTaskSwitchContext                       0x000024a9   Thumb Code    92  tasks.o(i.vTaskSwitchContext)
    vector_add                               0x00002519   Thumb Code    38  vector.o(i.vector_add)
    vector_delete                            0x0000253f   Thumb Code   112  vector.o(i.vector_delete)
    vector_get                               0x000025af   Thumb Code    24  vector.o(i.vector_get)
    vector_init                              0x000025c7   Thumb Code    24  vector.o(i.vector_init)
    vector_total                             0x000025f7   Thumb Code     6  vector.o(i.vector_total)
    xPortStartScheduler                      0x000025fd   Thumb Code    42  port.o(i.xPortStartScheduler)
    xPortSysTickHandler                      0x00002631   Thumb Code    26  port.o(i.xPortSysTickHandler)
    xQueueCreate                             0x00002651   Thumb Code   108  queue.o(i.xQueueCreate)
    xQueueCreateMutex                        0x000026bd   Thumb Code    70  queue.o(i.xQueueCreateMutex)
    xQueueGenericReceive                     0x00002703   Thumb Code   272  queue.o(i.xQueueGenericReceive)
    xQueueGenericSend                        0x00002813   Thumb Code   206  queue.o(i.xQueueGenericSend)
    xQueueGenericSendFromISR                 0x000028e1   Thumb Code    86  queue.o(i.xQueueGenericSendFromISR)
    xTaskCheckForTimeOut                     0x00002939   Thumb Code    92  tasks.o(i.xTaskCheckForTimeOut)
    xTaskGenericCreate                       0x0000299d   Thumb Code   240  tasks.o(i.xTaskGenericCreate)
    xTaskGetCurrentTaskHandle                0x00002aa9   Thumb Code     6  tasks.o(i.xTaskGetCurrentTaskHandle)
    xTaskRemoveFromEventList                 0x00002ab5   Thumb Code   106  tasks.o(i.xTaskRemoveFromEventList)
    xTaskResumeAll                           0x00002b35   Thumb Code   186  tasks.o(i.xTaskResumeAll)
    Region$$Table$$Base                      0x00002fd8   Number         0  anon$$obj.o(Region$$Table)
    Region$$Table$$Limit                     0x00002ff8   Number         0  anon$$obj.o(Region$$Table)
    pxCurrentTCB                             0x20000000   Data           4  tasks.o(.data)
    xTaskQueue                               0x20000040   Data           4  main.o(.data)
    task_handle                              0x20000044   Data           4  main.o(.data)
    mutex                                    0x20000048   Data           4  main.o(.data)
    __stdout                                 0x20000058   Data           4  stdout.o(.data)
    __microlib_freelist                      0x2000005c   Data           4  mvars.o(.data)
    __microlib_freelist_initialised          0x20000060   Data           4  mvars.o(.data)
    currentTasks                             0x20001930   Data          12  main.o(.bss)
    currentTasksId                           0x2000193c   Data          12  main.o(.bss)
    __heap_base                              0x20001948   Data           0  startup_mps_cm3.o(HEAP)
    __heap_limit                             0x20001d48   Data           0  startup_mps_cm3.o(HEAP)
    __initial_sp                             0x20001f48   Data           0  startup_mps_cm3.o(STACK)



==============================================================================

Memory Map of the image

  Image Entry point : 0x0000015d

  Load Region LR_IROM1 (Base: 0x00000000, Size: 0x0000305c, Max: 0x00040000, ABSOLUTE)

    Execution Region ER_IROM1 (Exec base: 0x00000000, Load base: 0x00000000, Size: 0x00002ff8, Max: 0x00040000, ABSOLUTE)

    Exec Addr    Load Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x00000000   0x00000000   0x000000c0   Data   RO          672    RESET               startup_mps_cm3.o
    0x000000c0   0x000000c0   0x00000000   Code   RO          677  * .ARM.Collect$$$$00000000  mc_w.l(entry.o)
    0x000000c0   0x000000c0   0x00000004   Code   RO          994    .ARM.Collect$$$$00000001  mc_w.l(entry2.o)
    0x000000c4   0x000000c4   0x00000004   Code   RO          997    .ARM.Collect$$$$00000004  mc_w.l(entry5.o)
    0x000000c8   0x000000c8   0x00000000   Code   RO          999    .ARM.Collect$$$$00000008  mc_w.l(entry7b.o)
    0x000000c8   0x000000c8   0x00000000   Code   RO         1001    .ARM.Collect$$$$0000000A  mc_w.l(entry8b.o)
    0x000000c8   0x000000c8   0x00000008   Code   RO         1002    .ARM.Collect$$$$0000000B  mc_w.l(entry9a.o)
    0x000000d0   0x000000d0   0x00000000   Code   RO         1004    .ARM.Collect$$$$0000000D  mc_w.l(entry10a.o)
    0x000000d0   0x000000d0   0x00000000   Code   RO         1006    .ARM.Collect$$$$0000000F  mc_w.l(entry11a.o)
    0x000000d0   0x000000d0   0x00000004   Code   RO          995    .ARM.Collect$$$$00002712  mc_w.l(entry2.o)
    0x000000d4   0x000000d4   0x00000088   Code   RO          411    .emb_text           port.o
    0x0000015c   0x0000015c   0x0000001c   Code   RO          673  * .text               startup_mps_cm3.o
    0x00000178   0x00000178   0x00000024   Code   RO          680    .text               mc_w.l(rand.o)
    0x0000019c   0x0000019c   0x00000024   Code   RO          683    .text               mc_w.l(memcpya.o)
    0x000001c0   0x000001c0   0x00000024   Code   RO          685    .text               mc_w.l(memseta.o)
    0x000001e4   0x000001e4   0x00000018   Code   RO          687    .text               mc_w.l(strncpy.o)
    0x000001fc   0x000001fc   0x000000b0   Code   RO          980    .text               mf_w.l(fadd.o)
    0x000002ac   0x000002ac   0x000000e4   Code   RO          982    .text               mf_w.l(dmul.o)
    0x00000390   0x00000390   0x000000de   Code   RO          984    .text               mf_w.l(ddiv.o)
    0x0000046e   0x0000046e   0x0000001a   Code   RO          986    .text               mf_w.l(dfltui.o)
    0x00000488   0x00000488   0x00000026   Code   RO          988    .text               mf_w.l(f2d.o)
    0x000004ae   0x000004ae   0x00000002   PAD
    0x000004b0   0x000004b0   0x00000030   Code   RO          990    .text               mf_w.l(cdcmple.o)
    0x000004e0   0x000004e0   0x00000038   Code   RO          992    .text               mf_w.l(d2f.o)
    0x00000518   0x00000518   0x0000002c   Code   RO         1009    .text               mc_w.l(uidiv.o)
    0x00000544   0x00000544   0x00000062   Code   RO         1011    .text               mc_w.l(uldiv.o)
    0x000005a6   0x000005a6   0x00000000   Code   RO         1015    .text               mc_w.l(iusefp.o)
    0x000005a6   0x000005a6   0x0000006e   Code   RO         1016    .text               mf_w.l(fepilogue.o)
    0x00000614   0x00000614   0x000000ba   Code   RO         1018    .text               mf_w.l(depilogue.o)
    0x000006ce   0x000006ce   0x0000014e   Code   RO         1020    .text               mf_w.l(dadd.o)
    0x0000081c   0x0000081c   0x00000030   Code   RO         1022    .text               mf_w.l(dfixul.o)
    0x0000084c   0x0000084c   0x00000030   Code   RO         1024    .text               mf_w.l(cdrcmple.o)
    0x0000087c   0x0000087c   0x00000024   Code   RO         1026    .text               mc_w.l(init.o)
    0x000008a0   0x000008a0   0x0000001e   Code   RO         1028    .text               mc_w.l(llshl.o)
    0x000008be   0x000008be   0x00000020   Code   RO         1030    .text               mc_w.l(llushr.o)
    0x000008de   0x000008de   0x00000024   Code   RO         1032    .text               mc_w.l(llsshr.o)
    0x00000902   0x00000902   0x00000002   PAD
    0x00000904   0x00000904   0x00000244   Code   RO          474    i.SchedulerGatekeeperTask  main.o
    0x00000b48   0x00000b48   0x00000020   Code   RO          924    i.__0printf         mc_w.l(printfa.o)
    0x00000b68   0x00000b68   0x0000005c   Code   RO          956    i.__free$realloc    mc_w.l(mallocr.o)
    0x00000bc4   0x00000bc4   0x00000050   Code   RO          957    i.__malloc$realloc  mc_w.l(mallocr.o)
    0x00000c14   0x00000c14   0x0000000e   Code   RO         1036    i.__scatterload_copy  mc_w.l(handlers.o)
    0x00000c22   0x00000c22   0x00000002   Code   RO         1037    i.__scatterload_null  mc_w.l(handlers.o)
    0x00000c24   0x00000c24   0x0000000e   Code   RO         1038    i.__scatterload_zeroinit  mc_w.l(handlers.o)
    0x00000c32   0x00000c32   0x00000002   PAD
    0x00000c34   0x00000c34   0x00000184   Code   RO          931    i._fp_digits        mc_w.l(printfa.o)
    0x00000db8   0x00000db8   0x000006dc   Code   RO          932    i._printf_core      mc_w.l(printfa.o)
    0x00001494   0x00001494   0x00000024   Code   RO          933    i._printf_post_padding  mc_w.l(printfa.o)
    0x000014b8   0x000014b8   0x0000002e   Code   RO          934    i._printf_pre_padding  mc_w.l(printfa.o)
    0x000014e6   0x000014e6   0x00000002   PAD
    0x000014e8   0x000014e8   0x000000a8   Code   RO          475    i.cpu_util          main.o
    0x00001590   0x00001590   0x0000016c   Code   RO          476    i.dynamic_task_admittance  main.o
    0x000016fc   0x000016fc   0x00000024   Code   RO          582    i.fputc             basic_io.o
    0x00001720   0x00001720   0x0000009c   Code   RO          477    i.generate_task     main.o
    0x000017bc   0x000017bc   0x00000050   Code   RO          958    i.internal_alloc    mc_w.l(mallocr.o)
    0x0000180c   0x0000180c   0x000000ac   Code   RO          478    i.isSchedulable     main.o
    0x000018b8   0x000018b8   0x000000e4   Code   RO          479    i.main              main.o
    0x0000199c   0x0000199c   0x0000003a   Code   RO          172    i.prvAllocateTCBAndStack  tasks.o
    0x000019d6   0x000019d6   0x00000002   PAD
    0x000019d8   0x000019d8   0x0000006c   Code   RO          173    i.prvCheckTasksWaitingTermination  tasks.o
    0x00001a44   0x00001a44   0x0000002a   Code   RO           66    i.prvCopyDataFromQueue  queue.o
    0x00001a6e   0x00001a6e   0x00000068   Code   RO           67    i.prvCopyDataToQueue  queue.o
    0x00001ad6   0x00001ad6   0x00000012   Code   RO          174    i.prvDeleteTCB      tasks.o
    0x00001ae8   0x00001ae8   0x0000001c   Code   RO          175    i.prvIdleTask       tasks.o
    0x00001b04   0x00001b04   0x00000046   Code   RO          176    i.prvInitialiseTCBVariables  tasks.o
    0x00001b4a   0x00001b4a   0x00000002   PAD
    0x00001b4c   0x00001b4c   0x00000068   Code   RO          177    i.prvInitialiseTaskLists  tasks.o
    0x00001bb4   0x00001bb4   0x0000001c   Code   RO           68    i.prvIsQueueEmpty   queue.o
    0x00001bd0   0x00001bd0   0x00000020   Code   RO           69    i.prvIsQueueFull    queue.o
    0x00001bf0   0x00001bf0   0x00000010   Code   RO          412    i.prvSetupTimerInterrupt  port.o
    0x00001c00   0x00001c00   0x0000006e   Code   RO           70    i.prvUnlockQueue    queue.o
    0x00001c6e   0x00001c6e   0x00000002   PAD
    0x00001c70   0x00001c70   0x00000058   Code   RO          378    i.pvPortMalloc      heap_1.o
    0x00001cc8   0x00001cc8   0x0000001a   Code   RO          413    i.pxPortInitialiseStack  port.o
    0x00001ce2   0x00001ce2   0x00000002   PAD
    0x00001ce4   0x00001ce4   0x0000006c   Code   RO          959    i.realloc           mc_w.l(mallocr.o)
    0x00001d50   0x00001d50   0x000000e0   Code   RO          480    i.set_priority      main.o
    0x00001e30   0x00001e30   0x00000074   Code   RO          481    i.sortTask          main.o
    0x00001ea4   0x00001ea4   0x000000ac   Code   RO          482    i.static_task_admittance  main.o
    0x00001f50   0x00001f50   0x00000008   Code   RO          483    i.swap              main.o
    0x00001f58   0x00001f58   0x00000002   Code   RO          484    i.vApplicationIdleHook  main.o
    0x00001f5a   0x00001f5a   0x00000002   PAD
    0x00001f5c   0x00001f5c   0x00000070   Code   RO          487    i.vApplicationTickHook  main.o
    0x00001fcc   0x00001fcc   0x0000001a   Code   RO            1    i.vListInitialise   list.o
    0x00001fe6   0x00001fe6   0x00000006   Code   RO            2    i.vListInitialiseItem  list.o
    0x00001fec   0x00001fec   0x00000034   Code   RO            3    i.vListInsert       list.o
    0x00002020   0x00002020   0x0000001c   Code   RO            4    i.vListInsertEnd    list.o
    0x0000203c   0x0000203c   0x00000024   Code   RO            5    i.vListRemove       list.o
    0x00002060   0x00002060   0x00000018   Code   RO          415    i.vPortEnterCritical  port.o
    0x00002078   0x00002078   0x0000001c   Code   RO          416    i.vPortExitCritical  port.o
    0x00002094   0x00002094   0x00000002   Code   RO          379    i.vPortFree         heap_1.o
    0x00002096   0x00002096   0x00000002   PAD
    0x00002098   0x00002098   0x00000010   Code   RO          417    i.vPortYieldFromISR  port.o
    0x000020a8   0x000020a8   0x00000098   Code   RO          488    i.vTaskCreate       main.o
    0x00002140   0x00002140   0x00000068   Code   RO          179    i.vTaskDelay        tasks.o
    0x000021a8   0x000021a8   0x00000074   Code   RO          181    i.vTaskDelete       tasks.o
    0x0000221c   0x0000221c   0x000000d0   Code   RO          183    i.vTaskIncrementTick  tasks.o
    0x000022ec   0x000022ec   0x0000000c   Code   RO          184    i.vTaskMissedYield  tasks.o
    0x000022f8   0x000022f8   0x00000078   Code   RO          185    i.vTaskPlaceOnEventList  tasks.o
    0x00002370   0x00002370   0x00000050   Code   RO          186    i.vTaskPriorityDisinherit  tasks.o
    0x000023c0   0x000023c0   0x00000078   Code   RO          187    i.vTaskPriorityInherit  tasks.o
    0x00002438   0x00002438   0x00000018   Code   RO          189    i.vTaskSetTimeOutState  tasks.o
    0x00002450   0x00002450   0x00000048   Code   RO          190    i.vTaskStartScheduler  tasks.o
    0x00002498   0x00002498   0x00000010   Code   RO          192    i.vTaskSuspendAll   tasks.o
    0x000024a8   0x000024a8   0x00000070   Code   RO          193    i.vTaskSwitchContext  tasks.o
    0x00002518   0x00002518   0x00000026   Code   RO          613    i.vector_add        vector.o
    0x0000253e   0x0000253e   0x00000070   Code   RO          614    i.vector_delete     vector.o
    0x000025ae   0x000025ae   0x00000018   Code   RO          616    i.vector_get        vector.o
    0x000025c6   0x000025c6   0x00000018   Code   RO          617    i.vector_init       vector.o
    0x000025de   0x000025de   0x00000018   Code   RO          618    i.vector_resize     vector.o
    0x000025f6   0x000025f6   0x00000006   Code   RO          620    i.vector_total      vector.o
    0x000025fc   0x000025fc   0x00000034   Code   RO          418    i.xPortStartScheduler  port.o
    0x00002630   0x00002630   0x00000020   Code   RO          419    i.xPortSysTickHandler  port.o
    0x00002650   0x00002650   0x0000006c   Code   RO           74    i.xQueueCreate      queue.o
    0x000026bc   0x000026bc   0x00000046   Code   RO           75    i.xQueueCreateMutex  queue.o
    0x00002702   0x00002702   0x00000110   Code   RO           76    i.xQueueGenericReceive  queue.o
    0x00002812   0x00002812   0x000000ce   Code   RO           77    i.xQueueGenericSend  queue.o
    0x000028e0   0x000028e0   0x00000056   Code   RO           78    i.xQueueGenericSendFromISR  queue.o
    0x00002936   0x00002936   0x00000002   PAD
    0x00002938   0x00002938   0x00000064   Code   RO          194    i.xTaskCheckForTimeOut  tasks.o
    0x0000299c   0x0000299c   0x0000010c   Code   RO          195    i.xTaskGenericCreate  tasks.o
    0x00002aa8   0x00002aa8   0x0000000c   Code   RO          196    i.xTaskGetCurrentTaskHandle  tasks.o
    0x00002ab4   0x00002ab4   0x00000080   Code   RO          200    i.xTaskRemoveFromEventList  tasks.o
    0x00002b34   0x00002b34   0x000000dc   Code   RO          201    i.xTaskResumeAll    tasks.o
    0x00002c10   0x00002c10   0x00000080   Data   RO          490    .constdata          main.o
    0x00002c90   0x00002c90   0x00000345   Data   RO          491    .conststring        main.o
    0x00002fd5   0x00002fd5   0x00000003   PAD
    0x00002fd8   0x00002fd8   0x00000020   Data   RO         1034    Region$$Table       anon$$obj.o


    Execution Region RW_IRAM1 (Exec base: 0x20000000, Load base: 0x00002ff8, Size: 0x00001f48, Max: 0x00010000, ABSOLUTE)

    Exec Addr    Load Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x20000000   0x00002ff8   0x00000038   Data   RW          204    .data               tasks.o
    0x20000038   0x00003030   0x00000004   Data   RW          383    .data               heap_1.o
    0x2000003c   0x00003034   0x00000004   Data   RW          420    .data               port.o
    0x20000040   0x00003038   0x00000014   Data   RW          492    .data               main.o
    0x20000054   0x0000304c   0x00000004   Data   RW          681    .data               mc_w.l(rand.o)
    0x20000058   0x00003050   0x00000004   Data   RW         1008    .data               mc_w.l(stdout.o)
    0x2000005c   0x00003054   0x00000004   Data   RW         1013    .data               mc_w.l(mvars.o)
    0x20000060   0x00003058   0x00000004   Data   RW         1014    .data               mc_w.l(mvars.o)
    0x20000064        -       0x000000c8   Zero   RW          203    .bss                tasks.o
    0x2000012c   0x0000305c   0x00000004   PAD
    0x20000130        -       0x00001800   Zero   RW          382    .bss                heap_1.o
    0x20001930        -       0x00000018   Zero   RW          489    .bss                main.o
    0x20001948        -       0x00000400   Zero   RW          671    HEAP                startup_mps_cm3.o
    0x20001d48        -       0x00000200   Zero   RW          670    STACK               startup_mps_cm3.o


==============================================================================

Image component sizes


      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Object Name

        36          6          0          0          0       3024   basic_io.o
        90         10          0          4       6144       2611   heap_1.o
       148          0          0          0          0      10809   list.o
      2454       1052        965         20         24      15112   main.o
       330         44          0          4          0       5737   port.o
      1058          0          0          0          0      11981   queue.o
        28          4        192          0       1536        876   startup_mps_cm3.o
      2098        326          0         56        200      19379   tasks.o
       228          0          0          0          0       4463   vector.o

    ----------------------------------------------------------------------
      6484       1442       1192         84       7908      73992   Object Totals
         0          0         32          0          0          0   (incl. Generated)
        14          0          3          0          4          0   (incl. Padding)

    ----------------------------------------------------------------------

      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Library Member Name

         0          0          0          0          0          0   entry.o
         0          0          0          0          0          0   entry10a.o
         0          0          0          0          0          0   entry11a.o
         8          4          0          0          0          0   entry2.o
         4          0          0          0          0          0   entry5.o
         0          0          0          0          0          0   entry7b.o
         0          0          0          0          0          0   entry8b.o
         8          4          0          0          0          0   entry9a.o
        30          0          0          0          0          0   handlers.o
        36          8          0          0          0         68   init.o
         0          0          0          0          0          0   iusefp.o
        30          0          0          0          0         68   llshl.o
        36          0          0          0          0         68   llsshr.o
        32          0          0          0          0         68   llushr.o
       360         30          0          0          0        356   mallocr.o
        36          0          0          0          0         68   memcpya.o
        36          0          0          0          0        108   memseta.o
         0          0          0          8          0          0   mvars.o
      2258         90          0          0          0        452   printfa.o
        36         10          0          4          0        136   rand.o
         0          0          0          4          0          0   stdout.o
        24          0          0          0          0         76   strncpy.o
        44          0          0          0          0         80   uidiv.o
        98          0          0          0          0         92   uldiv.o
        48          0          0          0          0         68   cdcmple.o
        48          0          0          0          0         68   cdrcmple.o
        56          0          0          0          0         88   d2f.o
       334          0          0          0          0        148   dadd.o
       222          0          0          0          0        100   ddiv.o
       186          0          0          0          0        176   depilogue.o
        48          0          0          0          0         68   dfixul.o
        26          0          0          0          0         76   dfltui.o
       228          0          0          0          0         96   dmul.o
        38          0          0          0          0         68   f2d.o
       176          0          0          0          0        140   fadd.o
       110          0          0          0          0        168   fepilogue.o

    ----------------------------------------------------------------------
      4604        146          0         16          0       2904   Library Totals
         8          0          0          0          0          0   (incl. Padding)

    ----------------------------------------------------------------------

      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Library Name

      3076        146          0         16          0       1640   mc_w.l
      1520          0          0          0          0       1264   mf_w.l

    ----------------------------------------------------------------------
      4604        146          0         16          0       2904   Library Totals

    ----------------------------------------------------------------------

==============================================================================


      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   

     11088       1588       1192        100       7908      72264   Grand Totals
     11088       1588       1192        100       7908      72264   ELF Image Totals
     11088       1588       1192        100          0          0   ROM Totals

==============================================================================

    Total RO  Size (Code + RO Data)                12280 (  11.99kB)
    Total RW  Size (RW Data + ZI Data)              8008 (   7.82kB)
    Total ROM Size (Code + RO Data + RW Data)      12380 (  12.09kB)

==============================================================================

